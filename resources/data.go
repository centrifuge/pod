package resources

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _go_centrifuge_build_configs_default_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdb\x72\xdb\xbc\x11\xbe\xe7\x53\xec\xc8\x37\x49\x27\x91\x44\xea\x60\x99\x33\xbd\x90\x25\x5b\x71\x7c\xa8\x6c\x29\x76\x92\x9b\x0e\x04\x2e\x49\x44\x24\xc0\x00\xa0\x0e\x7e\xfa\xce\x82\xa4\x6c\xff\x4e\x9a\x36\x9d\x76\xa6\x33\xbf\x6f\xcc\x01\xb0\xdf\x2e\x76\xbf\x3d\x40\x47\x30\xc5\x98\x95\x99\x85\x08\x37\x98\xa9\x22\x47\x69\xc1\xa2\xb1\x12\x2d\xb0\x84\x09\x69\x2c\xac\xd5\x86\x49\x8f\xa3\xb4\x5a\xc4\x65\x82\x37\x68\xb7\x4a\xaf\x43\x88\x33\x21\xad\xe7\x40\x84\x44\xb0\x29\x42\x54\xe3\xc9\xea\x8c\x01\x9b\x32\x0b\x93\x83\x2c\xe4\x4c\x48\x4b\xb8\x5e\x73\x24\xf4\x00\x8e\xe0\x4a\x71\x96\x39\xd5\x42\x26\xc0\x95\xb4\x9a\x71\x0b\x2c\x8a\x34\x1a\x83\x06\x24\x62\x04\x56\xc1\x0a\xc1\xa0\x85\xad\xb0\x29\xa0\xdc\xc0\x86\x69\xc1\x56\x19\x9a\xb6\x07\x8d\x3c\x41\x02\x88\x28\x84\x5e\xaf\xe7\xbe\xd1\xa6\xa8\xb1\xcc\x6b\xdb\x2f\xa2\x10\x46\xbd\x51\xb5\xb7\x52\xca\x1a\xab\x59\x31\x47\xd4\xa6\x92\x7d\x0f\xad\x8e\x28\xfa\x1d\x3f\x38\x6e\x77\xdb\xdd\xb6\xdf\xb1\xbc\xe8\xf4\x46\x41\x37\xe8\x88\x22\x36\x9d\xdb\x7c\x79\xbb\x5b\x6d\xd7\xe5\xd7\x2f\x5f\xa6\x71\xf9\xb8\x5c\xed\xce\xc6\x77\xb8\xbc\x99\x5c\xa9\xc7\xfd\x7e\x30\x18\x6d\x6e\x65\x72\xbf\x99\x5f\x7f\xbb\xfa\xb2\x6e\xfd\x02\xb4\xd7\x80\xde\xc7\xc3\xb3\x9b\x61\xbe\xfe\xfe\x80\xdf\x1e\x2e\x1f\x82\xef\xf3\xd2\x1f\x7e\x2e\xa2\x59\x6f\xfd\x51\xf9\xcb\x5e\x9e\xb2\x74\x7e\x3a\x58\xe0\x40\xfa\x15\x68\xe3\xaa\x71\xe3\xa9\xea\x02\x74\x7d\x94\x56\xd8\xfd\x39\xe3\x56\xe9\x7d\x08\xad\x96\xe7\x5c\x7d\xcd\x84\x7c\x15\xf0\x26\x62\xf0\xe6\x92\xc2\xfd\xd6\x83\x2a\xbc\x15\xda\x11\xdc\x94\x39\x6a\xc1\xe1\x62\x0a\x2a\x76\xa1\x7e\x16\xd4\x5a\xf6\xe0\x75\x3f\xa8\xa5\x4e\x1b\xd7\x42\x26\x8c\x25\x49\xa9\x22\x7c\xcd\x8a\x42\xab\x8d\x70\x1b\xca\x61\x3b\xd5\x0d\x11\x7f\x19\xa4\xde\xa0\x1d\xf4\x83\x76\xd0\xeb\xb6\x7d\x7f\xf8\xc7\x48\xf9\xc1\xb4\x77\xa9\xd4\xc3\x62\xb5\x5b\x5d\x4e\x56\x5f\xd3\x93\x8f\xf7\xd6\xdc\xee\xef\x67\xd1\x72\xae\x59\xff\xae\x58\x8c\xfb\x76\xb5\x31\x43\x26\x7d\xff\xdb\x76\x36\x0e\x1e\x5b\xaf\xf0\x7b\xfd\xf6\x71\xd0\xf6\x83\xe3\x9f\xc1\xdf\xe6\x01\x5f\xe4\xfa\x4c\xb0\xc5\xf5\x7d\x3f\xf9\xb4\x39\x7e\x98\xa5\x45\x72\xb7\x55\xa3\xad\x3a\x5f\x98\x0f\xe9\xd7\xd9\x6a\x26\x7a\x6c\x3c\xda\xb5\x6a\xf7\x9c\xd5\xac\x3c\x38\xff\x62\x0a\xef\xc1\x05\xe0\x67\xac\xed\x37\xae\xbd\x62\x2e\x6c\x11\x16\x99\xda\x63\x04\x8b\x9c\x69\x0b\x93\x9a\x0d\x06\x62\xa5\x9d\x2b\x13\xb1\x41\xf9\xc2\x95\xff\x06\x63\xba\x3b\xbf\x37\x0c\xce\xf8\x69\x3c\x1a\x1e\x9f\x04\xfd\xde\x59\xd0\x8f\xc7\xdd\xb3\x49\x3f\x18\x44\x01\xfa\xdd\x71\x77\x14\x04\x3d\x7e\x3c\x7d\xce\x2d\x63\x59\x42\x59\xfc\x9a\x52\x2c\x5f\xa1\xfe\x3d\x4a\xf9\xff\x21\xa5\x9c\xea\x5f\x52\xea\xbf\x4f\xaa\x3f\x69\xf5\x9b\xb4\xa2\x96\xf4\xc4\x8a\xbc\x5a\xf9\x3d\x2e\x75\xff\x95\x92\xe2\x9f\x8c\xda\x7e\x10\xb4\x7d\xff\xa7\xc1\x19\x27\xbd\x33\x3e\xb6\xfa\xcb\xfd\x64\xb7\x7d\x1c\xae\x87\x66\x79\x22\xbe\x2e\xee\x1e\xed\xe3\xc9\xf4\x78\xff\xe9\xb1\x38\x9d\xdf\x9d\x9d\x3f\xea\x4f\xea\xfe\x75\x49\x21\x76\x05\x7e\xdb\xf7\x5f\x35\x97\x06\xff\x72\xb6\x15\xbb\xcf\x28\xcb\xcf\xe3\xfb\xef\xeb\x8f\x97\xb9\xfc\xb0\x18\x7f\x9c\x7e\x7b\x8c\x8f\x71\x76\xad\x86\x56\x2b\x91\x7c\xdd\xe5\xc7\xe3\xc1\xdd\x3f\x0f\x7e\xed\xae\x9f\x85\xdf\xff\xdf\x46\x7f\x7c\xde\x1f\x0c\xb9\x3f\xec\x8d\x86\x6c\xd8\x8f\xa3\xfe\x79\x7f\x35\x3c\x61\xb1\xdf\x63\xa3\xe1\x34\xee\x9e\x0e\x86\xc1\x98\x75\xbb\x2d\x8f\xa6\x0b\x66\x19\x2c\xac\xd2\x2c\x41\xcf\x54\xff\xab\x99\x61\xce\x6c\xea\x4c\xca\xa8\x99\x4d\x4f\x21\x16\x19\x7a\x00\x05\xb3\x69\x08\x1d\x9b\x17\x9d\xa7\xa9\xe5\xef\x11\xb3\xac\xed\x4e\x46\x2b\xc2\x9d\x28\x19\x8b\xa4\xd4\xcc\x0a\x25\x0f\x0a\xb8\x5b\x5d\xfc\xbe\x9a\x0a\xe0\x95\xb6\x31\xe7\xaa\x94\xd6\xc0\x1a\xf7\x50\xdf\xc2\x63\xf5\x22\xe9\x59\xe3\x9e\x96\xb1\x46\x6c\xb6\x48\xf6\x42\x5a\xd4\x31\xe3\x08\x5b\x8a\x9c\x8b\xc0\x78\x7e\x01\x4c\x46\x30\x0f\xe6\xb0\x40\xbd\x41\xed\xea\x21\x4a\x2a\x78\x1e\x95\xc4\x0f\xca\x58\xc9\x72\xa4\x76\x5c\xcf\x1b\xde\x11\xcc\x95\xb6\x35\x0c\x41\xfc\x58\x94\x0e\x85\x30\xea\x8e\x02\x52\x4f\xe9\xf1\xde\xaa\xf7\x05\xa2\x06\xfe\xdc\x6b\xc6\x2b\x82\xa2\x72\xd2\xa2\x40\x2e\xe2\x3d\x9c\xed\x2c\x6a\xc9\x32\xb8\x98\x3f\xb3\x96\x40\x81\x33\x49\xd3\x9b\x46\xc6\x53\x8c\x80\x59\x10\x31\xac\x30\x15\x32\x82\x9b\xf1\x92\x60\xb0\x96\xbe\x98\x87\xb0\x6d\xef\xda\xfb\xf6\x63\x15\x02\xb2\xba\x34\x18\x1d\x18\x48\xf7\xce\xd8\x1e\x35\x05\xc2\x99\xeb\xf2\xc7\x9d\x5e\x8a\x1c\x55\xe9\xae\x29\x41\x15\x28\xeb\x91\x52\x22\x77\x56\x53\x4b\xa0\xcb\x18\x0f\x9a\xe5\x5a\x24\x84\x56\xaf\x6b\x5a\x0e\x25\x17\x52\xe4\x65\x0e\x11\x66\x6c\xef\xf4\xe2\x06\xf5\x1e\x8a\xa0\x00\x8d\xa6\x50\xd2\x20\x21\xb1\x8d\x12\x11\x58\x91\x93\x16\x66\x2d\xe3\x6b\xe3\x00\x58\xf4\xad\x34\x16\x56\x8c\xec\x56\x12\x52\x65\x2c\x49\xaa\x52\x73\x34\xf0\x66\xb1\x98\xbe\x83\xc9\xfc\xd3\x3b\xe0\x4a\xa3\x81\x76\xbb\xfd\xb6\x9e\x85\xd5\x1a\x84\x84\x4c\x25\x2e\xe5\x42\x68\x91\x7d\x64\xab\x29\x73\x8c\x60\xb5\xa7\x6b\x55\x31\x68\x91\x17\x77\x7f\x7d\xb3\x61\x59\x89\x77\xc8\x22\xf8\x0b\x04\x6f\x41\x18\xc8\xd0\xb8\xb6\x28\xc1\xed\xc1\x0a\x33\xb5\x7d\x47\xde\x93\xc0\x53\x26\x13\x3c\xdc\x63\xea\xee\x68\x15\xec\x3c\x78\xb9\x18\x42\x6b\xd0\xed\xe6\xc6\xa5\xe2\x6d\x89\x25\xfe\x81\x02\xce\x33\xcc\xec\x25\x4f\xb5\x92\xaa\x34\xd4\x79\x39\x1a\x23\x64\xe2\x7d\x27\x81\x8a\x20\xd5\x23\xc1\x54\x74\x28\x5d\x33\x56\x31\x50\x01\x42\x6d\x3a\xf5\xd5\x74\xdd\xc7\xb7\x22\xcb\x88\x2b\x2c\xcb\x14\x67\xb6\x62\x8b\xb1\x4c\xdb\xb2\xf0\x80\xe4\x1f\x2a\x41\x2a\xe6\x5d\x87\x7f\xae\x11\x0d\x94\x05\x79\x14\xf8\x9e\x67\x68\x2a\x02\x54\x2a\xc8\x21\x5b\x26\xdc\xeb\xa2\x8e\x25\x65\x17\xd4\xdb\x0f\x4c\x38\x0e\x5c\x2f\xaa\x62\x78\x04\xe3\x9c\xf2\xcf\x75\x13\xf2\x3d\x03\xcb\xcc\x9a\x50\x36\x2c\x13\x11\xc4\x5a\xe5\xee\x2e\x5c\xa3\x73\x84\x07\xd5\xce\xb9\x8b\x97\x1f\xa4\x2d\xcf\x55\x19\x94\x76\x92\xba\xa9\xc8\x65\x88\xe0\x2f\xfd\xe7\xde\x55\xee\x00\xb9\x89\xf2\xe4\xd3\xdd\x55\x08\x5b\x13\x76\x9e\xde\x09\xe1\xc9\x49\x7f\xe8\xac\xba\xa1\x44\xb2\x9a\x49\xc3\x1c\x97\xa1\x50\x2a\x83\x9c\xed\x40\xa3\xd5\xa2\x1a\x77\x0c\xca\x88\x0c\x7e\x76\x4c\x6d\x5c\xa6\xe4\x6c\x77\x57\x9d\x0b\x21\xa8\x1d\xf7\x63\x48\x41\x35\x67\xc3\x32\x87\xbb\xaf\x3c\xc9\xc8\x74\x5e\x6a\xed\x1e\x0d\xcf\x24\x52\x66\x60\x85\x48\xaf\x0a\x8b\xdc\x62\xe4\xc1\x01\x80\xf4\x11\x8b\x82\x3a\xad\x9a\x17\x67\x26\x62\xac\x89\x69\x15\xe5\x76\xa5\x83\xab\x3c\x17\xd6\x85\x89\x49\x60\x92\xa7\x44\xaf\xfa\x25\xea\xfc\x8d\xd2\x72\xe7\xd0\xf7\xe0\xc3\x1e\x19\xdd\xab\x3a\x77\x25\x62\x34\x05\x93\x21\xb4\x46\xc7\xc3\x6e\xea\x38\x7b\xe8\x87\x3f\xf1\x7f\xd3\x0d\xeb\x32\x86\x19\x52\xa3\xdb\xa6\x82\xa7\x87\x4e\x09\x75\x35\x6e\x2c\xad\x47\x0c\x45\x7c\xae\xe7\xcc\x88\x12\xd6\xd9\x57\x1a\xab\xf2\x5a\x49\xd3\x2a\xea\x67\x71\xdd\x04\x6e\x5c\x55\x6e\x51\x4f\x6e\x1d\x1e\xbf\x55\x98\x2a\xe0\x83\x5e\x9e\x09\xf2\xb5\x2b\x9f\x6f\xb6\x94\xaf\xdf\x4b\xa1\x11\xb6\x06\x94\x06\x51\xf0\xfa\x45\x4c\x0f\x60\xfa\xe4\xcc\x92\xd9\x8e\xdb\x6f\x9f\xf3\x29\xb5\xb6\x08\x3b\x1d\xca\xa6\x8c\xea\x50\x78\x32\xe8\x0f\xaa\x32\xc7\x76\xae\xcc\x51\xaa\x6d\x31\x82\x84\xd1\x9d\x04\x77\x78\x45\x5d\xf9\x5e\x92\x49\x48\xd8\xa2\x70\xd2\x41\x17\x66\x5b\x14\x20\xd5\xb6\xa2\xd7\x8c\x99\x39\x49\x3b\x7e\x35\x7f\xee\xe8\x8c\x19\xc8\x44\x2e\xea\x31\x22\x12\x71\x8c\x8e\x49\x87\x08\x1d\x6a\x1a\xe5\x65\xc2\xcc\x95\x3b\xdd\x3c\xe6\x27\x94\x68\xe8\x12\xbe\xc6\xa4\xd5\x71\x14\x5d\xe2\x3e\x84\xde\xf3\xc5\x3b\xdc\xa8\x35\xba\xf5\xd1\xa0\x59\xae\x38\x32\x71\xfc\x7a\xbd\x3e\xd7\xd8\x6c\xf9\x4f\x50\x32\xb6\xd7\xf4\x08\x86\x93\x17\x6b\x4b\x72\x46\x8c\xfa\x5c\xab\x3c\x04\x7f\x70\xd8\x63\xc6\xa0\x5d\x54\x6d\x7c\x78\x58\x2d\x4a\x93\x2e\xd5\xdf\x34\xe3\x19\x36\x50\x70\x74\x28\x72\x1a\x73\xb5\xa1\x12\x67\xc0\x28\x25\xe9\xff\x4a\x8b\x28\x41\xaa\x36\x94\x46\x89\x66\x55\x4e\x3d\xb5\x36\xab\x5c\x35\xab\x82\x23\x9f\x08\xf3\x3c\x4c\x35\x35\xa2\xa8\xfa\xe1\x84\xc1\x2a\x53\x7c\xed\xa6\x86\x8a\x21\x60\xb5\x48\x12\xd4\x0e\x9b\x06\x38\xdc\xd9\xa6\x10\x56\xcd\x70\xd8\x6d\xba\xe1\x8f\x14\x6b\xea\x36\x4a\x66\xcf\xba\x91\x39\xe4\x6a\x63\xd2\x13\x34\x35\xa7\x97\xf0\xfe\xa0\x46\xff\xff\x2f\x6b\xcb\x54\x18\x30\x58\x55\x2e\x43\x53\x95\xa1\x40\xe6\x65\x66\x45\x91\x09\xea\x76\x34\x68\xbd\xc8\xee\xa7\x54\x43\x63\x45\xde\xb4\x91\x84\x99\xeb\x83\x58\x08\x7e\xbb\x4b\x75\x8c\xc9\x3d\x44\xb8\x2a\x93\xa4\x9e\x66\xa8\xbc\x38\x0a\x25\x0a\x08\xd0\x73\xbb\x55\x19\x43\xe9\x2a\x82\x5b\xa1\x31\x82\x64\x3c\xa0\xaf\x10\x62\x96\x19\x74\xa7\x8a\x42\xab\xb8\x4a\xc6\x06\x98\xa6\x29\x5a\x6d\x8e\x79\x55\x76\xd4\xbf\xa9\x15\x1a\x79\x9d\x24\x56\x97\xe8\xfd\x23\x00\x00\xff\xff\x58\x9d\x56\x65\x40\x14\x00\x00")

func go_centrifuge_build_configs_default_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_default_config_yaml,
		"go-centrifuge/build/configs/default_config.yaml",
	)
}

var _go_centrifuge_build_configs_testing_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc9\x6e\x1c\x37\x10\xbd\xf7\x57\x10\xcc\xc1\x97\x59\xb8\x6f\x37\x43\xf1\x12\x08\x11\xe2\x38\x80\x9c\x63\x91\xac\x96\x1a\xa3\x5e\xc2\x66\x4b\x1e\x1b\xfe\xf7\xa0\x67\x46\xb6\x6f\x51\x6e\x64\x75\xbd\xf7\x58\xd5\xef\x25\x1c\x6a\xe9\xda\xe5\x0e\x6f\xb0\x3e\x8d\xe5\x10\x48\xc5\xb9\x76\xc3\x5d\x83\xf5\x1e\x0b\x2e\x7d\x68\x08\x81\x94\xc6\x65\xa8\xf3\x7a\x26\xa4\x87\x6e\x08\xe4\x74\x24\xe4\x80\xc7\x40\x5e\x7d\xa5\x90\x73\xc1\x79\xa6\x81\x3a\x1f\x19\x38\xa3\x9d\x4c\x4a\x29\x05\xa9\xcd\x96\x47\x65\x24\xb2\x2c\x93\xd6\x80\x5c\x71\x01\x9a\x6e\x68\x2a\xc7\xa9\x8e\x34\x7c\xa5\xa9\x9b\xee\xb1\xd0\x40\x01\xe7\x2d\x17\x6e\x9b\x6a\x59\x1b\x4e\xe5\x8a\x9f\x2b\x0d\x34\x59\xeb\x5b\x27\xad\xcf\xd6\xb2\xec\x45\x6a\x13\xcf\x39\x2b\x70\xad\xe4\x59\x03\x83\x9c\x5c\x2b\x80\x45\x01\x5c\x31\x2e\x2d\xcb\xd2\x48\xd6\x4a\x97\x58\x72\xf0\x9d\x6f\x82\x02\xfd\xbc\xca\x76\x8f\x34\x50\x69\x12\x37\x0e\xad\x8c\xad\x77\xac\x45\xab\x23\xb3\xc2\xb6\xce\x33\xb0\x1c\x32\xfd\xb6\xa1\x87\xdc\xd2\x40\xe7\xd3\x83\xe9\xe9\xfa\x83\x24\x1f\x1e\x70\xa0\x41\x8a\x0d\x1d\x68\x10\x46\x70\xa5\x36\x74\xa2\x81\x6f\x68\xa1\xc1\x6d\xe8\x0c\x0f\xeb\x00\x19\x79\x44\x6e\x50\x26\xef\xb8\x57\x2a\x73\x4c\x20\xa2\x8b\xc2\xa2\x42\x83\x2c\xea\xd8\x46\x25\x23\x32\x69\x0d\xe8\xec\x9c\xf3\x2d\x18\xeb\x41\x38\x2e\xc4\xfa\x90\x1e\xd2\xba\x8a\xc4\x85\x8b\x8e\x6b\xad\x75\x04\x8e\x90\x6d\x02\xf4\xcc\x30\x74\x4e\x09\x68\x13\x38\xa9\x4d\x66\x46\x69\x1d\xb3\x07\x6d\xb5\x88\x60\xda\x94\x98\x17\xd8\xae\x4c\x5d\xa6\x81\x2a\x8d\xcc\x30\x30\xdb\x2c\x00\xb7\x4a\x46\xb7\xf5\x42\xb4\x5b\xa5\x9c\xf0\xca\xfb\x2c\x6d\xa6\x1b\xfa\x88\x65\xee\xc6\x75\xc8\x6f\xaf\x2e\x3f\x7e\x82\x79\x7e\x1a\x4b\x0e\xe4\xd5\x73\xe9\xe2\x81\x40\x5e\x6a\x81\xa6\xe9\x32\x0e\xb5\xab\xc7\xdf\x72\x20\x94\x7d\x7e\xb1\x77\x9a\x66\xb5\xee\xd5\xfd\x6a\xc5\x1f\x06\x3d\xfb\xb3\x3b\x73\x65\x25\xb5\x97\xc9\x72\xdd\xe6\x2c\x79\x32\x9c\x2b\x0e\x31\x33\x05\xde\xb7\xd9\x38\x21\x92\xd3\xda\x39\xad\x52\xca\x28\x3d\x68\xe3\x14\x5a\xd0\x26\x83\xb0\x99\x9e\xc8\x66\x4c\x05\x6b\x20\x74\xbf\x7f\xfd\xd0\x25\x3c\x57\xbf\x4f\x4a\xf5\xbb\xf2\xf4\x08\x6f\xde\xea\x2f\x9f\xa2\x30\x6f\xbf\xf8\x92\x3e\x4c\xbf\xde\x7e\xd4\xf6\xaa\xbe\xf9\xf3\xfd\x74\x83\xf7\x9f\xae\xfe\x48\x37\xe3\xfb\x77\xd7\x4b\xfd\xf0\x37\x6d\x9a\x5f\xc8\xeb\x4b\x9e\xd6\xf4\x90\xb9\x8e\x05\xee\xb0\xf9\x39\x64\x07\x3c\xae\x65\x0c\x64\x5f\xfb\x69\xff\xfc\xa9\x69\xfe\x59\x70\xc1\xb5\x63\x58\xfa\xdb\xb1\x1c\xb0\xcc\x81\x88\x86\x90\xa7\xd3\xe5\x16\xba\xfa\x57\xd7\xe3\xef\x1f\x03\xe1\x4d\xb3\xd2\xac\xcd\x93\x98\xce\xab\x99\x96\xf8\xd0\xa5\xeb\x35\xb3\xbb\xdd\x7e\xb7\xdb\xc7\xa5\x7b\xc8\xfb\x82\xf3\xb8\x94\x84\xf3\x7e\x12\xd3\x35\x1e\x77\xd3\x12\x77\x13\xf6\x67\x4c\xe9\x1e\xa1\xe2\x7f\x83\x0e\x2b\xf0\x04\x9a\xbb\xbb\xa1\x1b\xee\x5e\xa8\x79\xe9\xfe\xff\xba\x3f\x01\x9f\xb5\x1b\x18\xd2\xfd\x58\x2e\xe2\x53\xc1\x34\xf6\x7d\x57\x03\xa9\x65\xc1\xe6\xdf\x00\x00\x00\xff\xff\xdc\x3c\xc5\xc4\xef\x04\x00\x00")

func go_centrifuge_build_configs_testing_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_testing_config_yaml,
		"go-centrifuge/build/configs/testing_config.yaml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"go-centrifuge/build/configs/default_config.yaml": go_centrifuge_build_configs_default_config_yaml,
	"go-centrifuge/build/configs/testing_config.yaml": go_centrifuge_build_configs_testing_config_yaml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"go-centrifuge": &_bintree_t{nil, map[string]*_bintree_t{
		"build": &_bintree_t{nil, map[string]*_bintree_t{
			"configs": &_bintree_t{nil, map[string]*_bintree_t{
				"default_config.yaml": &_bintree_t{go_centrifuge_build_configs_default_config_yaml, map[string]*_bintree_t{
				}},
				"testing_config.yaml": &_bintree_t{go_centrifuge_build_configs_testing_config_yaml, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
