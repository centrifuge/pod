package resources

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _go_centrifuge_build_configs_default_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5b\x6f\xdb\x3a\x12\x7e\xd7\xaf\x18\x38\x2f\xed\xa2\xb5\x2d\xf9\x12\x47\xc0\x3e\x38\x76\x92\xa6\xb9\xac\x13\xa7\x49\xdb\x97\x05\x4d\x8d\x24\xd6\x12\xa9\x92\x94\x2f\xf9\xf5\x8b\xa1\x24\xc7\x39\x69\xb7\x7b\x7a\xce\x59\xe0\x00\xcd\x4b\x0c\x92\xf3\xcd\x70\xe6\x9b\x8b\x78\x00\x53\x8c\x59\x99\x59\x88\x70\x85\x99\x2a\x72\x94\x16\x2c\x1a\x2b\xd1\x02\x4b\x98\x90\xc6\xc2\x52\xad\x98\xf4\x38\x4a\xab\x45\x5c\x26\x78\x8d\x76\xad\xf4\x32\x84\x38\x13\xd2\x7a\x0e\x44\x48\x04\x9b\x22\x44\x35\x9e\xac\xce\x18\xb0\x29\xb3\x30\xd9\xc9\x42\xce\x84\xb4\x84\xeb\x35\x47\x42\x0f\xe0\x00\x2e\x15\x67\x99\x53\x2d\x64\x02\x5c\x49\xab\x19\xb7\xc0\xa2\x48\xa3\x31\x68\x40\x22\x46\x60\x15\x2c\x10\x0c\x5a\x58\x0b\x9b\x02\xca\x15\xac\x98\x16\x6c\x91\xa1\x69\x7b\xd0\xc8\x13\x24\x80\x88\x42\xe8\xf5\x7a\xee\x37\xda\x14\x35\x96\x79\x6d\xfb\x79\x14\xc2\xa8\x37\xaa\xf6\x16\x4a\x59\x63\x35\x2b\x66\x88\xda\x54\xb2\x6f\xa1\xd5\x11\x45\xbf\xe3\x07\x87\xed\x6e\xbb\xdb\xf6\x3b\x96\x17\x9d\xde\x28\xe8\x06\x1d\x51\xc4\xa6\x73\x93\xdf\xdd\x6c\x16\xeb\x65\xf9\xf9\xd3\xa7\x69\x5c\x3e\xde\x2d\x36\x27\xe3\x5b\xbc\xbb\x9e\x5c\xaa\xc7\xed\x76\x30\x18\xad\x6e\x64\x72\xbf\x9a\x5d\x7d\xb9\xfc\xb4\x6c\xfd\x00\xb4\xd7\x80\xde\xc7\xc3\x93\xeb\x61\xbe\xfc\xfa\x80\x5f\x1e\x2e\x1e\x82\xaf\xb3\xd2\x1f\x7e\x2c\xa2\xb3\xde\xf2\xbd\xf2\xef\x7a\x79\xca\xd2\xd9\xf1\x60\x8e\x03\xe9\x57\xa0\x8d\xab\xc6\x8d\xa7\xaa\x0b\xd0\xf5\x51\x5a\x61\xb7\xa7\x8c\x5b\xa5\xb7\x21\xb4\x5a\x9e\x73\xf5\x15\x13\xf2\x45\xc0\x9b\x88\xc1\xab\x0b\x0a\xf7\x6b\x0f\xaa\xf0\x56\x68\x07\x70\x5d\xe6\xa8\x05\x87\xf3\x29\xa8\xd8\x85\x7a\x2f\xa8\xb5\xec\xce\xeb\x7e\x50\x4b\x1d\x37\xae\x85\x4c\x18\x4b\x92\x52\x45\xf8\x92\x15\x85\x56\x2b\xe1\x36\x94\xc3\x76\xaa\x1b\x22\xfe\x30\x48\xbd\x41\x3b\xe8\x07\xed\xa0\xd7\x6d\xfb\xfe\xf0\xb7\x91\xf2\x83\x69\xef\x42\xa9\x87\xf9\x62\xb3\xb8\x98\x2c\x3e\xa7\x47\xef\xef\xad\xb9\xd9\xde\x9f\x45\x77\x33\xcd\xfa\xb7\xc5\x7c\xdc\xb7\x8b\x95\x19\x32\xe9\xfb\x5f\xd6\x67\xe3\xe0\xb1\xf5\x02\xbf\xd7\x6f\x1f\x06\x6d\x3f\x38\xfc\x1e\xfc\x4d\x1e\xf0\x79\xae\x4f\x04\x9b\x5f\xdd\xf7\x93\x0f\xab\xc3\x87\xb3\xb4\x48\x6e\xd7\x6a\xb4\x56\xa7\x73\xf3\x2e\xfd\x7c\xb6\x38\x13\x3d\x36\x1e\x6d\x5a\xb5\x7b\x4e\x6a\x56\xee\x9c\x7f\x3e\x85\xb7\xe0\x02\xf0\x3d\xd6\xf6\x1b\xd7\x5e\x32\x17\xb6\x08\x8b\x4c\x6d\x31\x82\x79\xce\xb4\x85\x49\xcd\x06\x03\xb1\xd2\xce\x95\x89\x58\xa1\x7c\xe6\xca\xdf\xc1\x98\xee\xc6\xef\x0d\x83\x13\x7e\x1c\x8f\x86\x87\x47\x41\xbf\x77\x12\xf4\xe3\x71\xf7\x64\xd2\x0f\x06\x51\x80\x7e\x77\xdc\x1d\x05\x41\x8f\x1f\x4e\xf7\xb9\x65\x2c\x4b\x28\x8b\x5f\x52\x8a\xe5\x0b\xd4\x3f\x47\x29\xff\x0f\x52\xca\xa9\xfe\x21\xa5\xfe\x7a\x52\xfd\xa2\xd5\x9f\x4f\x2b\xce\x2c\xcb\xb6\xe6\x27\x8b\xd5\x1f\x65\xd6\xa4\xd6\xfe\x8b\x5c\x7f\x5f\x72\xd1\xbc\xf3\x44\x8c\xbc\x5a\xf9\x39\x3a\x75\xff\x97\x7e\xe5\x1f\x8d\xda\x7e\x10\xb4\x7d\xff\xbb\xc1\x19\x27\xbd\x13\x3e\xb6\xfa\xd3\xfd\x64\xb3\x7e\x1c\x2e\x87\xe6\xee\x48\x7c\x9e\xdf\x3e\xda\xc7\xa3\xe9\xe1\xf6\xc3\x63\x71\x3c\xbb\x3d\x39\x7d\xd4\x1f\xd4\xfd\xcb\x7e\x45\xec\x0a\xfc\xb6\xef\xbf\x98\x5c\x1a\xfc\x8b\xb3\xb5\xd8\x7c\x44\x59\x7e\x1c\xdf\x7f\x5d\xbe\xbf\xc8\xe5\xbb\xf9\xf8\xfd\xf4\xcb\x63\x7c\x88\x67\x57\x6a\x68\xb5\x12\xc9\xe7\x4d\x7e\x38\x1e\xdc\xfe\xf7\xe0\xd7\xee\xfa\x5e\xf8\xfd\xff\x6f\xf4\xc7\xa7\xfd\xc1\x90\xfb\xc3\xde\x68\xc8\x86\xfd\x38\xea\x9f\xf6\x17\xc3\x23\x16\xfb\x3d\x36\x1a\x4e\xe3\xee\xf1\x60\x18\x8c\x59\xb7\x5b\x47\x7f\x2f\x94\x2f\x89\xf0\x34\xf4\xfe\xd9\x5c\xf8\xeb\xd9\xf0\x8b\x0f\xbf\x9b\x0f\x07\x30\x65\x96\xc1\xdc\x2a\xcd\x12\xf4\x4c\xf5\xbf\xfa\x40\x99\x31\x9b\x3a\x93\x32\x9a\x9c\xa7\xc7\x10\x8b\x0c\x3d\x80\x82\xd9\x34\x84\x8e\xcd\x8b\xce\x13\x5b\xfe\x1d\x31\xcb\xda\xee\x64\xb4\x20\xdc\x89\x92\xb1\x48\x4a\xcd\xac\x50\x72\xa7\x80\xbb\xd5\xf9\xcf\xab\xa9\x00\x5e\x68\x1b\x73\xae\x4a\x69\x0d\x2c\x71\x0b\xf5\x2d\x3c\x56\x2f\x92\x9e\x25\x6e\x69\x19\x6b\xc4\x66\x8b\x64\xcf\xa5\x45\x1d\x33\x8e\xb0\xa6\xc8\xb9\x08\x8c\x67\xe7\xc0\x64\x04\xb3\x60\x06\x73\xd4\x2b\xd4\xae\x45\xa2\xa4\x1e\xe8\x51\x97\x7c\xa7\x8c\x95\x2c\x47\x9a\xfd\xeb\x8f\x1b\xef\x00\x66\x4a\xdb\x1a\x86\x20\xbe\x2d\x4a\x87\x42\x18\x75\x47\x01\xa9\xa7\x14\x79\x6b\xd5\xdb\x02\x51\x03\xdf\xf7\x9a\xf1\x8a\xa0\xa8\x9c\x34\x2f\x90\x8b\x78\x0b\x27\x1b\x8b\x5a\xb2\x0c\xce\x67\x7b\xd6\x12\x28\x70\x26\xe9\x53\x51\x23\xe3\x29\x46\xc0\x2c\x88\x18\x16\x98\x0a\x19\xc1\xf5\xf8\x8e\x60\xb0\x96\x3e\x9f\x85\xb0\x6e\x6f\xda\xdb\xf6\x63\x15\x02\xb2\xba\x34\x18\xed\x18\x48\xf7\xce\xd8\x16\x35\x05\xc2\x99\xeb\xf2\xc7\x9d\xbe\x13\x39\xaa\xd2\x5d\x53\x82\x2a\x50\xd6\xdf\xaf\x12\xb9\xb3\x9a\xa6\x04\xba\x8c\xf1\xa0\x59\xae\x45\x42\x68\xf5\xba\xa6\xe5\x50\x72\x21\x45\x5e\xe6\x10\x61\xc6\xb6\x4e\x2f\xae\x50\x6f\xa1\x08\x0a\xd0\x68\x0a\x25\x0d\x12\x12\x5b\x29\x11\x81\x15\x39\x69\x61\xd6\x32\xbe\x34\x0e\x80\x45\x5f\x4a\x63\x61\xc1\xc8\x6e\x25\x21\x55\xc6\x92\xa4\x2a\x35\x47\x03\xaf\xe6\xf3\xe9\x1b\x98\xcc\x3e\xbc\x01\xae\x34\x1a\x68\xb7\xdb\xaf\xeb\x0f\x6f\xb5\x04\x21\x21\x53\x89\x4b\xb9\x10\x5a\x64\x1f\xd9\x6a\xca\x1c\x23\x58\x6c\xe9\x5a\x55\x0c\x5a\xe4\xc5\xcd\x3f\x5f\xad\x58\x56\xe2\x2d\xb2\x08\xfe\x01\xc1\x6b\x10\x06\x32\x34\x6e\x52\x92\xe0\xf6\x60\x81\x99\x5a\xbf\x21\xef\x49\xe0\x29\x93\x09\xee\xee\x31\x75\x77\xb4\x0a\x36\x1e\x3c\x5f\x0c\xa1\x35\xe8\x76\x73\xe3\x52\xf1\xa6\xc4\x12\x7f\x43\x01\xe7\x19\x66\xb6\x92\xa7\x5a\x49\x55\x1a\x1a\xc6\x38\x1a\x23\x64\xe2\x7d\x25\x81\x8a\x20\xd5\x8b\x84\xa9\xe8\x50\xba\xc9\x5f\xc5\x40\x05\x08\xb5\xe9\xd4\x57\xd3\xf5\x68\xb7\x16\x59\x46\x5c\x61\x59\xa6\x38\xb3\x15\x5b\x8c\x65\xda\x96\x85\x07\x24\xff\x50\x09\x52\x41\xef\x3a\xfc\x53\x8d\x68\xa0\x2c\xc8\xa3\xc0\xb7\x3c\x43\x53\x11\xa0\x52\x41\x0e\x59\x33\xe1\x9e\x32\xea\x58\x52\x76\x41\xbd\xfd\xc0\x84\xe3\xc0\xd5\xbc\x2a\x86\x07\x30\xce\x29\xff\x5c\x47\x21\xdf\x33\xb0\xcc\x2c\x09\x65\xc5\x32\x11\x41\xac\x55\xee\xee\xc2\x35\x3a\x47\x78\x50\xed\x9c\xba\x78\xf9\x41\xda\xf2\x5c\x95\x41\x69\x27\xa9\x9b\x95\x5d\x86\x08\xfe\xdc\x7f\xee\x11\xc7\x1d\x20\x37\x51\x9e\x7c\xb8\xbd\x0c\x61\x6d\xc2\xce\xd3\xa3\x44\x78\x74\xd4\x1f\x3a\xab\xae\x29\x91\xac\x66\xd2\x30\xc7\x65\x28\x94\xca\x20\x67\x1b\xd0\x68\xb5\xa8\x26\x60\x83\x32\x22\x83\xf7\x8e\xa9\x95\xcb\x94\x9c\x6d\x6e\xab\x73\x21\x04\xb5\xe3\xbe\x0d\x29\xa8\xe6\xac\x58\xe6\x70\xb7\x95\x27\x19\x99\xce\x4b\xad\xdd\x0b\xc5\x9e\x44\xca\x0c\x2c\x10\x25\x44\x68\x91\x5b\x8c\x3c\xd8\x01\x90\x3e\x62\x51\x50\xa7\x55\xf3\xbc\x95\x89\x18\x6b\x62\x5a\x45\xb9\x5d\xe9\xe0\x2a\xcf\x85\x75\x61\x62\x12\x98\xe4\x29\xd1\xab\x7e\xf6\x72\xfe\x46\x69\xb9\x73\xe8\x5b\xf0\x61\x8b\x8c\xee\x55\x9d\xbb\x14\x31\x9a\x82\xc9\x10\x5a\xa3\xc3\x61\x37\x75\x9c\xdd\xf5\xc3\xef\xf8\xbf\xe9\x86\x75\x19\xc3\x0c\xa9\xd1\xad\x53\xc1\xd3\x5d\xa7\x84\xba\x1a\x37\x96\xd6\x63\x86\x22\x3e\xd7\x9f\x1e\x11\x25\xac\xb3\xaf\x34\x56\xe5\xb5\x92\xa6\x55\xd4\x6f\x70\x75\x13\xb8\x76\x55\xb9\x45\x3d\xb9\xb5\x7b\x69\xab\xc2\x54\x01\xef\xf4\xf2\x4c\x90\xaf\x5d\xf9\x7c\xb5\xa6\x7c\xfd\x5a\x0a\x8d\xb0\x36\xa0\x34\x88\x82\xd7\xcf\x6f\x6c\x91\x39\x37\x72\x66\xc9\x6c\xc7\xed\xd7\xfb\x7c\x4a\xad\x2d\xc2\x4e\x87\xb2\x29\xa3\x3a\x14\x1e\x0d\xfa\x83\xaa\xcc\xb1\x8d\x2b\x73\x94\x6a\x6b\x8c\x20\x61\x74\x27\xc1\x1d\x5e\x51\x57\xbe\xe7\x64\x12\x12\xd6\x28\x9c\x74\xd0\x85\xb3\x35\x0a\x90\x6a\x5d\xd1\xeb\x8c\x99\x19\x49\x3b\x7e\x35\x7f\xee\xe8\x19\x33\x90\x89\x5c\xd4\x63\x44\x24\xe2\x18\x1d\x93\x76\x11\xda\xd5\x34\xca\xcb\x84\x99\x4b\x77\xba\x79\x39\x9c\x50\xa2\xa1\x4b\xf8\x1a\x93\x56\xc7\x51\x74\x81\xdb\x10\x7a\xfb\x8b\xb7\xb8\x52\x4b\x74\xeb\xa3\x41\xb3\x5c\x71\x64\xe2\xf8\xf5\x72\x7d\xa6\xb1\xd9\xf2\x9f\xa0\x64\x6c\xaf\x84\xb4\x21\x1c\x3d\x5b\xbb\x23\x67\xc4\xa8\x4f\xb5\xca\x43\xf0\x07\xbb\x3d\x66\x0c\xda\x79\xd5\xc6\x87\xbb\xd5\xa2\x34\xe9\x9d\xfa\x97\x66\x3c\xc3\x06\x0a\x0e\x76\x45\x4e\x63\xae\x56\x54\xe2\x0c\x18\xa5\x24\xfd\x5f\x68\x11\x25\x48\xd5\x86\xd2\x28\xd1\xac\xca\xa9\xa7\xd6\x66\x95\xab\x66\x55\x70\xe4\x13\x61\xf6\xc3\x54\x53\x23\x8a\xaa\x57\x5a\x06\x8b\x4c\xf1\xa5\x9b\x1a\x2a\x86\x80\xd5\x22\x49\x50\x3b\x6c\x1a\xe0\x70\x63\x9b\x42\x58\x35\xc3\x61\xb7\xe9\x86\xdf\x52\xac\xa9\xdb\x28\x99\xed\x75\x23\xb3\xcb\xd5\xc6\xa4\x27\x68\x6a\x4e\xcf\xe1\xfd\x41\x8d\xfe\xf7\x2f\x6b\x77\xa9\x30\x60\xb0\xaa\x5c\x86\xa6\x2a\x43\x81\xcc\xcb\xcc\x8a\x22\x13\xd4\xed\x68\xd0\x7a\x96\xdd\x4f\xa9\x86\xc6\x8a\xbc\x69\x23\x09\x33\x57\x3b\xb1\x10\xfc\x76\x97\xea\x18\x93\x5b\x88\x70\x51\x26\x49\x3d\xcd\x50\x79\x71\x14\x4a\x14\x10\xa0\xe7\x76\xab\x32\x86\xd2\x55\x04\xb7\x42\x63\x04\xc9\x78\x40\xbf\x42\x88\x59\x66\xd0\x9d\x2a\x0a\xad\xe2\x2a\x19\x1b\x60\x9a\xa6\x68\xb5\x39\xe6\x55\xd9\x51\x3f\xe0\x17\x1a\x79\x9d\x24\x56\x97\xe8\xfd\x27\x00\x00\xff\xff\x31\x73\xdd\xd8\xad\x18\x00\x00")

func go_centrifuge_build_configs_default_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_default_config_yaml,
		"go-centrifuge/build/configs/default_config.yaml",
	)
}

var _go_centrifuge_build_configs_testing_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc9\x6e\x1c\x37\x10\xbd\xf7\x57\x10\xcc\xc1\x97\x59\xb8\x6f\x37\x43\xf1\x12\x08\x11\xe2\x38\x80\x9c\x63\x91\xac\x96\x1a\xa3\x5e\xc2\x66\x4b\x1e\x1b\xfe\xf7\xa0\x67\x46\xb6\x6f\x51\x6e\x64\x75\xbd\xf7\x58\xd5\xef\x25\x1c\x6a\xe9\xda\xe5\x0e\x6f\xb0\x3e\x8d\xe5\x10\x48\xc5\xb9\x76\xc3\x5d\x83\xf5\x1e\x0b\x2e\x7d\x68\x08\x81\x94\xc6\x65\xa8\xf3\x7a\x26\xa4\x87\x6e\x08\xe4\x74\x24\xe4\x80\xc7\x40\x5e\x7d\xa5\x90\x73\xc1\x79\xa6\x81\x3a\x1f\x19\x38\xa3\x9d\x4c\x4a\x29\x05\xa9\xcd\x96\x47\x65\x24\xb2\x2c\x93\xd6\x80\x5c\x71\x01\x9a\x6e\x68\x2a\xc7\xa9\x8e\x34\x7c\xa5\xa9\x9b\xee\xb1\xd0\x40\x01\xe7\x2d\x17\x6e\x9b\x6a\x59\x1b\x4e\xe5\x8a\x9f\x2b\x0d\x34\x59\xeb\x5b\x27\xad\xcf\xd6\xb2\xec\x45\x6a\x13\xcf\x39\x2b\x70\xad\xe4\x59\x03\x83\x9c\x5c\x2b\x80\x45\x01\x5c\x31\x2e\x2d\xcb\xd2\x48\xd6\x4a\x97\x58\x72\xf0\x9d\x6f\x82\x02\xfd\xbc\xca\x76\x8f\x34\x50\x69\x12\x37\x0e\xad\x8c\xad\x77\xac\x45\xab\x23\xb3\xc2\xb6\xce\x33\xb0\x1c\x32\xfd\xb6\xa1\x87\xdc\xd2\x40\xe7\xd3\x83\xe9\xe9\xfa\x83\x24\x1f\x1e\x70\xa0\x41\x8a\x0d\x1d\x68\x10\x46\x70\xa5\x36\x74\xa2\x81\x6f\x68\xa1\xc1\x6d\xe8\x0c\x0f\xeb\x00\x19\x79\x44\x6e\x50\x26\xef\xb8\x57\x2a\x73\x4c\x20\xa2\x8b\xc2\xa2\x42\x83\x2c\xea\xd8\x46\x25\x23\x32\x69\x0d\xe8\xec\x9c\xf3\x2d\x18\xeb\x41\x38\x2e\xc4\xfa\x90\x1e\xd2\xba\x8a\xc4\x85\x8b\x8e\x6b\xad\x75\x04\x8e\x90\x6d\x02\xf4\xcc\x30\x74\x4e\x09\x68\x13\x38\xa9\x4d\x66\x46\x69\x1d\xb3\x07\x6d\xb5\x88\x60\xda\x94\x98\x17\xd8\xae\x4c\x5d\xa6\x81\x2a\x8d\xcc\x30\x30\xdb\x2c\x00\xb7\x4a\x46\xb7\xf5\x42\xb4\x5b\xa5\x9c\xf0\xca\xfb\x2c\x6d\xa6\x1b\xfa\x88\x65\xee\xc6\x75\xc8\x6f\xaf\x2e\x3f\x7e\x82\x79\x7e\x1a\x4b\x0e\xe4\xd5\x73\xe9\xe2\x81\x40\x5e\x6a\x81\xa6\xe9\x32\x0e\xb5\xab\xc7\xdf\x72\x20\x94\x7d\x7e\xb1\x77\x9a\x66\xb5\xee\xd5\xfd\x6a\xc5\x1f\x06\x3d\xfb\xb3\x3b\x73\x65\x25\xb5\x97\xc9\x72\xdd\xe6\x2c\x79\x32\x9c\x2b\x0e\x31\x33\x05\xde\xb7\xd9\x38\x21\x92\xd3\xda\x39\xad\x52\xca\x28\x3d\x68\xe3\x14\x5a\xd0\x26\x83\xb0\x99\x9e\xc8\x66\x4c\x05\x6b\x20\x74\xbf\x7f\xfd\xd0\x25\x3c\x57\xbf\x4f\x4a\xf5\xbb\xf2\xf4\x08\x6f\xde\xea\x2f\x9f\xa2\x30\x6f\xbf\xf8\x92\x3e\x4c\xbf\xde\x7e\xd4\xf6\xaa\xbe\xf9\xf3\xfd\x74\x83\xf7\x9f\xae\xfe\x48\x37\xe3\xfb\x77\xd7\x4b\xfd\xf0\x37\x6d\x9a\x5f\xc8\xeb\x4b\x9e\xd6\xf4\x90\xb9\x8e\x05\xee\xb0\xf9\x39\x64\x07\x3c\xae\x65\x0c\x64\x5f\xfb\x69\xff\xfc\xa9\x69\xfe\x59\x70\xc1\xb5\x63\x58\xfa\xdb\xb1\x1c\xb0\xcc\x81\x88\x86\x90\xa7\xd3\xe5\x16\xba\xfa\x57\xd7\xe3\xef\x1f\x03\xe1\x4d\xb3\xd2\xac\xcd\x93\x98\xce\xab\x99\x96\xf8\xd0\xa5\xeb\x35\xb3\xbb\xdd\x7e\xb7\xdb\xc7\xa5\x7b\xc8\xfb\x82\xf3\xb8\x94\x84\xf3\x7e\x12\xd3\x35\x1e\x77\xd3\x12\x77\x13\xf6\x67\x4c\xe9\x1e\xa1\xe2\x7f\x83\x0e\x2b\xf0\x04\x9a\xbb\xbb\xa1\x1b\xee\x5e\xa8\x79\xe9\xfe\xff\xba\x3f\x01\x9f\xb5\x1b\x18\xd2\xfd\x58\x2e\xe2\x53\xc1\x34\xf6\x7d\x57\x03\xa9\x65\xc1\xe6\xdf\x00\x00\x00\xff\xff\xdc\x3c\xc5\xc4\xef\x04\x00\x00")

func go_centrifuge_build_configs_testing_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_testing_config_yaml,
		"go-centrifuge/build/configs/testing_config.yaml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"go-centrifuge/build/configs/default_config.yaml": go_centrifuge_build_configs_default_config_yaml,
	"go-centrifuge/build/configs/testing_config.yaml": go_centrifuge_build_configs_testing_config_yaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func     func() ([]byte, error)
	Children map[string]*_bintree_t
}

var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"go-centrifuge": &_bintree_t{nil, map[string]*_bintree_t{
		"build": &_bintree_t{nil, map[string]*_bintree_t{
			"configs": &_bintree_t{nil, map[string]*_bintree_t{
				"default_config.yaml": &_bintree_t{go_centrifuge_build_configs_default_config_yaml, map[string]*_bintree_t{}},
				"testing_config.yaml": &_bintree_t{go_centrifuge_build_configs_testing_config_yaml, map[string]*_bintree_t{}},
			}},
		}},
	}},
}}
