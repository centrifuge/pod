package resources

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _go_centrifuge_build_configs_default_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4b\x6f\xe3\x38\x12\xbe\xeb\x57\x14\x9c\x4b\xf7\x62\xda\xb6\xe4\xb7\x81\x3d\x38\x76\xe2\xce\xcb\xeb\xc4\xce\xf3\xb2\xa0\xa8\x92\xc4\x58\x22\x15\x92\xf2\xeb\xd7\x2f\x48\x49\x4e\x32\x99\xde\xd9\xee\x99\x59\x60\x80\xee\x4b\x0c\x92\xf5\x55\xb1\xea\xab\x87\xd8\x47\x30\xc1\x90\xe4\x89\x86\x00\xd7\x98\x88\x2c\x45\xae\x41\xa3\xd2\x1c\x35\x90\x88\x30\xae\x34\xac\xc4\x9a\x70\x87\x22\xd7\x92\x85\x79\x84\x33\xd4\x1b\x21\x57\x43\x08\x13\xc6\xb5\x63\x41\x18\x47\xd0\x31\x42\x50\xe2\xf1\xe2\x8c\x02\x1d\x13\x0d\xe3\x83\x2c\xa4\x84\x71\x6d\x70\x9d\xea\xc8\xd0\x01\x38\x82\x4b\x41\x49\x62\x55\x33\x1e\x01\x15\x5c\x4b\x42\x35\x90\x20\x90\xa8\x14\x2a\xe0\x88\x01\x68\x01\x3e\x82\x42\x0d\x1b\xa6\x63\x40\xbe\x86\x35\x91\x8c\xf8\x09\xaa\xba\x03\x95\xbc\x81\x04\x60\xc1\x10\x5a\xad\x96\xfd\x8d\x3a\x46\x89\x79\x5a\xda\x7e\x16\x0c\xa1\xdf\xea\x17\x7b\xbe\x10\x5a\x69\x49\xb2\x39\xa2\x54\x85\xec\x17\xa8\x35\x58\xd6\x6e\xb8\x5e\xaf\xde\xac\x37\xeb\x6e\x43\xd3\xac\xd1\xea\x7b\x4d\xaf\xc1\xb2\x50\x35\xae\xd3\xe5\xf5\xd6\xdf\xac\xf2\xa7\xc7\xc7\x49\x98\xef\x97\xfe\xf6\x64\x74\x83\xcb\xd9\xf8\x52\xec\x77\xbb\x4e\xa7\xbf\xbe\xe6\xd1\xdd\x7a\x7e\xf5\x7c\xf9\xb8\xaa\xfd\x0e\x68\xab\x02\xbd\x0b\xbb\x27\xb3\x6e\xba\x7a\xb9\xc7\xe7\xfb\x8b\x7b\xef\x65\x9e\xbb\xdd\x87\x2c\x98\xb6\x56\xe7\xc2\x5d\xb6\xd2\x98\xc4\xf3\xe3\xce\x02\x3b\xdc\x2d\x40\x2b\x57\x8d\x2a\x4f\x15\x17\x30\xd7\x47\xae\x99\xde\x9d\x12\xaa\x85\xdc\x0d\xa1\x56\x73\xac\xab\xaf\x08\xe3\x1f\x02\x5e\x45\x0c\x3e\x5d\x98\x70\x7f\x76\xa0\x08\x6f\x81\x76\x04\xb3\x3c\x45\xc9\x28\x9c\x4d\x40\x84\x36\xd4\x6f\x82\x5a\xca\x1e\xbc\xee\x7a\xa5\xd4\x71\xe5\x5a\x48\x98\xd2\x46\x92\x8b\x00\x3f\xb2\x22\x93\x62\xcd\xec\x86\xb0\xd8\x56\x75\x45\xc4\xdf\x0d\x52\xab\x53\xf7\xda\x5e\xdd\x6b\x35\xeb\xae\xdb\xfd\x75\xa4\x5c\x6f\xd2\xba\x10\xe2\x7e\xe1\x6f\xfd\x8b\xb1\xff\x14\x0f\xce\xef\xb4\xba\xde\xdd\x4d\x83\xe5\x5c\x92\xf6\x4d\xb6\x18\xb5\xb5\xbf\x56\x5d\xc2\x5d\xf7\x79\x33\x1d\x79\xfb\xda\x07\xfc\x56\xbb\xde\xf3\xea\xae\xd7\xfb\x16\xfc\x75\xea\xd1\x45\x2a\x4f\x18\x59\x5c\xdd\xb5\xa3\xdb\x75\xef\x7e\x1a\x67\xd1\xcd\x46\xf4\x37\xe2\x74\xa1\xbe\xc6\x4f\x53\x7f\xca\x5a\x64\xd4\xdf\xd6\x4a\xf7\x9c\x94\xac\x3c\x38\xff\x6c\x02\x5f\xc0\x06\xe0\x5b\xac\x6d\x57\xae\xbd\x24\x36\x6c\x01\x66\x89\xd8\x61\x00\x8b\x94\x48\x0d\xe3\x92\x0d\x0a\x42\x21\xad\x2b\x23\xb6\x46\xfe\xce\x95\xdf\xc1\x98\xe6\xd6\x6d\x75\xbd\x13\x7a\x1c\xf6\xbb\xbd\x81\xd7\x6e\x9d\x78\xed\x70\xd4\x3c\x19\xb7\xbd\x4e\xe0\xa1\xdb\x1c\x35\xfb\x9e\xd7\xa2\xbd\xc9\x5b\x6e\x29\x4d\x22\x93\xc5\x1f\x29\x45\x52\x1f\xe5\x8f\x51\xca\xfd\x83\x94\xb2\xaa\x7f\x97\x52\x7f\x3d\xa9\x7e\xd2\xea\xcf\xa7\x15\x25\x9a\x24\x3b\xf5\x83\xc5\xea\x8f\x32\x6b\x5c\x6a\xff\x49\xae\xbf\x2f\xb9\xcc\xbc\xf3\x4a\x8c\xb4\x58\xf9\x31\x3a\x35\xff\x97\x7e\xe5\x0e\xfa\x75\xd7\xf3\xea\xae\xfb\xcd\xe0\x8c\xa2\xd6\x09\x1d\x69\xf9\x78\x37\xde\x6e\xf6\xdd\x55\x57\x2d\x07\xec\x69\x71\xb3\xd7\xfb\xc1\xa4\xb7\xbb\xdd\x67\xc7\xf3\x9b\x93\xd3\xbd\xbc\x15\x77\x1f\xfb\x95\x61\x97\xe7\xd6\x5d\xf7\xc3\xe4\x52\xe1\x5f\x4c\x37\x6c\xfb\x80\x3c\x7f\x18\xdd\xbd\xac\xce\x2f\x52\xfe\x75\x31\x3a\x9f\x3c\xef\xc3\x1e\x4e\xaf\x44\x57\x4b\xc1\xa2\xa7\x6d\xda\x1b\x75\x6e\xfe\x7b\xf0\x4b\x77\x7d\x2b\xfc\xee\xff\x37\xfa\xa3\xd3\x76\xa7\x4b\xdd\x6e\xab\xdf\x25\xdd\x76\x18\xb4\x4f\xdb\x7e\x77\x40\x42\xb7\x45\xfa\xdd\x49\xd8\x3c\xee\x74\xbd\x11\x69\x36\xcb\xe8\xbf\x09\xe5\x47\x22\xbc\x0e\xbd\x7f\x36\x17\xfe\x7a\x36\xfc\xe4\xc3\x77\xf3\xe1\x08\x26\x44\x13\x58\x68\x21\x49\x84\x8e\x2a\xfe\x16\x1f\x28\x73\xa2\x63\x6b\x52\x62\x26\xe7\xc9\x31\x84\x2c\x41\x07\x20\x23\x3a\x1e\x42\x43\xa7\x59\xe3\x95\x2d\xff\x0e\x88\x26\x75\x7b\x32\xf0\x0d\xee\x58\xf0\x90\x45\xb9\x24\x9a\x09\x7e\x50\x40\xed\xea\xe2\xc7\xd5\x14\x00\x1f\xb4\x8d\x28\x15\x39\xd7\x0a\x56\xb8\x83\xf2\x16\x0e\x29\x17\x8d\x9e\x15\xee\xcc\x32\x96\x88\xd5\x96\x91\x3d\xe3\x1a\x65\x48\x28\xc2\xc6\x44\xce\x46\x60\x34\x3f\x03\xc2\x03\x98\x7b\x73\x58\xa0\x5c\xa3\xb4\x2d\x12\xb9\xe9\x81\x8e\xe9\x92\x5f\x85\xd2\x9c\xa4\x68\x66\xff\xf2\xe3\xc6\x39\x82\xb9\x90\xba\x84\x31\x10\xbf\x2d\x6a\x0e\x0d\xa1\xdf\xec\x7b\x46\xbd\x49\x91\x2f\x5a\x7c\xc9\x10\x25\xd0\xb7\x5e\x53\x4e\xe6\x65\x85\x93\x16\x19\x52\x16\xee\xe0\x64\xab\x51\x72\x92\xc0\xd9\xfc\x8d\xb5\x06\x14\x28\xe1\xe6\x53\x51\x22\xa1\x31\x06\x40\x34\xb0\x10\x7c\x8c\x19\x0f\x60\x36\x5a\x1a\x18\x2c\xa5\xcf\xe6\x43\xd8\xd4\xb7\xf5\x5d\x7d\x5f\x84\xc0\x58\x9d\x2b\x0c\x0e\x0c\x34\xf7\x4e\xc8\x0e\xa5\x09\x84\x35\xd7\xe6\x8f\x3d\xbd\x64\x29\x8a\xdc\x5e\x93\x83\xc8\x90\x97\xdf\xaf\x1c\xa9\xb5\xda\x4c\x09\xe6\x32\xca\x81\x6a\xb9\x14\x19\x42\xad\xd5\x54\x35\x8b\x92\x32\xce\xd2\x3c\x85\x00\x13\xb2\xb3\x7a\x71\x8d\x72\x07\x99\x97\x81\x44\x95\x09\xae\xd0\x20\x91\xb5\x60\x01\x68\x96\x1a\x2d\x44\x6b\x42\x57\xca\x02\x90\xe0\x39\x57\x1a\x7c\x62\xec\x16\x1c\x62\xa1\xb4\x91\x14\xb9\xa4\xa8\xe0\xd3\x62\x31\xf9\x05\xc6\xf3\xdb\x5f\x80\x0a\x89\x0a\xea\xf5\xfa\xe7\xf2\xc3\x5b\xac\x80\x71\x48\x44\x64\x53\x6e\x08\x35\x63\x9f\xb1\x55\xe5\x29\x06\xe0\xef\xcc\xb5\x8a\x18\xd4\x8c\x17\xb7\xff\xfc\xb4\x26\x49\x8e\x37\x48\x02\xf8\x07\x78\x9f\x81\x29\x48\x50\xd9\x49\x89\x83\xdd\x03\x1f\x13\xb1\xf9\xc5\x78\x8f\x03\x8d\x09\x8f\xf0\x70\x8f\x89\xbd\xa3\x16\xb0\x75\xe0\xfd\xe2\x10\x6a\x9d\x66\x33\x55\x36\x15\xaf\x73\xcc\xf1\x57\x14\xb0\x9e\x21\x6a\xc7\x69\x2c\x05\x17\xb9\x32\xc3\x18\x45\xa5\x18\x8f\x9c\x17\x23\x50\x10\xa4\x78\x91\x50\x05\x1d\x72\x3b\xf9\x8b\x10\x4c\x01\x42\xa9\x1a\xe5\xd5\x64\x39\xda\x6d\x58\x92\x18\xae\x90\x24\x11\x94\xe8\x82\x2d\x4a\x13\xa9\xf3\xcc\x01\x23\x7f\x5f\x08\x9a\x82\xde\xb4\xf8\xa7\x12\x51\x41\x9e\x19\x8f\x02\xdd\xd1\x04\x55\x41\x80\x42\x85\x71\xc8\x86\x30\xfb\x94\x51\xc6\xd2\x64\x17\x94\xdb\xf7\x84\x59\x0e\x5c\x2d\x8a\x62\x78\x04\xa3\xd4\xe4\x9f\xed\x28\xc6\xf7\x04\x34\x51\x2b\x83\xb2\x26\x09\x0b\x20\x94\x22\xb5\x77\xa1\x12\xad\x23\x1c\x28\x76\x4e\x6d\xbc\x5c\x2f\xae\x39\xb6\xca\x20\xd7\xe3\xd8\xce\xca\x36\x43\x18\x7d\xef\x3f\xfb\x88\x63\x0f\x18\x37\x99\x3c\xb9\xbd\xb9\x1c\xc2\x46\x0d\x1b\xaf\x8f\x12\xc3\xc1\xa0\xdd\xb5\x56\xcd\x4c\x22\x69\x49\xb8\x22\x96\xcb\x90\x09\x91\x40\x4a\xb6\x20\x51\x4b\x56\x4c\xc0\x0a\x79\x60\x0c\x7e\x73\x4c\xac\x6d\xa6\xa4\x64\x7b\x53\x9c\x1b\x82\x57\x3a\xee\xb7\x21\x99\xa9\x39\x6b\x92\x58\xdc\x5d\xe1\x49\x62\x4c\xa7\xb9\x94\xf6\x85\xe2\x8d\x44\x4c\x14\xf8\x88\x1c\x02\xd4\x48\x35\x06\x0e\x1c\x00\x8c\x3e\xc3\x22\xaf\x4c\xab\xea\x79\x2b\x61\x21\x96\xc4\xd4\xc2\xe4\x76\xa1\x83\x8a\x34\x65\xda\x86\x89\x70\x20\x9c\xc6\x86\x5e\xe5\xb3\x97\xf5\x37\x72\x4d\xad\x43\xbf\x80\x0b\x3b\x24\xe6\x5e\xc5\xb9\x4b\x16\xa2\xca\x08\x1f\x42\xad\xdf\xeb\x36\x63\xcb\xd9\x43\x3f\xfc\x86\xff\xab\x6e\x58\x96\x31\x4c\xd0\x34\xba\x4d\xcc\x68\x7c\xe8\x94\x50\x56\xe3\xca\xd2\x72\xcc\x10\x86\xcf\xe5\xa7\x47\x60\x12\xd6\xda\x97\x2b\x2d\xd2\x52\x49\xd5\x2a\xca\x37\xb8\xb2\x09\xcc\x6c\x55\xae\x99\x9e\x5c\x3b\xbc\xb4\x15\x61\x2a\x80\x0f\x7a\x69\xc2\x8c\xaf\x6d\xf9\xfc\xb4\x31\xf9\xfa\x92\x33\x89\xb0\x51\x20\x24\xb0\x8c\x96\xcf\x6f\xc4\x4f\xac\x1b\x29\xd1\xc6\x6c\xcb\xed\xcf\x6f\xf9\x14\x6b\x9d\x0d\x1b\x0d\x93\x4d\x89\xa9\x43\xc3\x41\xa7\xdd\x29\xca\x1c\xd9\xda\x32\x67\x52\x6d\x83\x01\x44\xc4\xdc\x89\x51\x8b\x97\x95\x95\xef\x3d\x99\x18\x87\x0d\x32\x2b\xed\x35\x61\xba\x41\x06\x5c\x6c\x0a\x7a\x4d\x89\x9a\x1b\x69\xcb\xaf\xea\x9f\x3d\x3a\x25\x0a\x12\x96\xb2\x72\x8c\x08\x58\x18\xa2\x65\xd2\x21\x42\x87\x9a\x66\xf2\x32\x22\xea\xd2\x9e\xae\x5e\x0e\xc7\x26\xd1\xd0\x26\x7c\x89\x69\x56\x47\x41\x70\x81\xbb\x21\xb4\xde\x2e\xde\xe0\x5a\xac\xd0\xae\xf7\x3b\xd5\x72\xc1\x91\xb1\xe5\xd7\xc7\xf5\xb9\xc4\x6a\xcb\x7d\x85\xe2\xa1\xbe\x62\x5c\x0f\x61\xf0\x6e\x6d\x69\x9c\x11\xa2\x3c\x95\x22\x1d\x82\xdb\x39\xec\x11\xa5\x50\x2f\x8a\x36\xde\x3d\xac\x66\xb9\x8a\x97\xe2\x5f\x92\xd0\x04\x2b\x28\x38\x3a\x14\x39\x89\xa9\x58\x9b\x12\xa7\x40\x09\xc1\xcd\x5f\x5f\xb2\x20\x42\x53\x6d\x4c\x1a\x45\x92\x14\x39\xf5\xda\xda\xb4\xb0\xd5\xac\x08\x0e\x7f\x25\xcc\xdb\x30\x95\xd4\x08\x82\xe2\x95\x96\x80\x9f\x08\xba\xb2\x53\x43\xc1\x10\xd0\x92\x45\x11\x4a\x8b\x6d\x06\x38\xdc\xea\xaa\x10\x16\xcd\xb0\xdb\xac\xba\xe1\x6f\x29\x96\xa6\xdb\x08\x9e\xbc\xe9\x46\xea\x90\xab\x95\x49\xaf\xd0\xa6\x39\xbd\x87\x77\x3b\x25\xfa\xdf\xbf\xac\x2d\x63\xa6\x40\x61\x51\xb9\x94\x99\xaa\x94\x09\x64\x9a\x27\x9a\x65\x09\x33\xdd\xce\x0c\x5a\xef\xb2\xfb\x35\xd5\x50\x69\x96\x56\x6d\x24\x22\xea\xea\x20\x36\x04\xb7\xde\x74\x1c\xf3\x59\x60\x12\x21\x4b\xf2\x88\x71\x35\xb7\xa3\x67\xcd\xa8\xfe\xd6\x57\x6d\xc0\x15\x09\x02\xd9\x38\xec\xd7\x13\xe6\x67\x5e\x56\x67\xa2\x91\x79\x59\xe3\x3a\x9d\x71\x21\x26\x79\xcf\x0f\x9f\xe7\xa7\x62\xf9\xf4\xb8\xbd\x9a\x5d\xde\xdf\x5e\x9f\xef\xe4\xdd\x46\xfb\x4f\x51\x27\x3a\xbe\x7a\x5e\xe2\x7e\x3a\x3a\x9f\xd5\xbe\x03\xf7\x7a\x7c\xeb\x9d\xd0\xab\x97\xd1\xcb\xf5\xfc\xc6\x63\x03\x7f\x1c\x4f\xf4\x74\x76\x4e\xe3\xa5\xff\xd2\x59\xfa\x0f\xe7\xe7\x6e\x37\x77\x07\xf9\xe5\x92\x7c\x0f\xae\x7f\xf9\x75\xc4\xaf\xc4\xf9\xfc\x7e\x31\xbe\xe9\x3c\xc5\x7a\xdb\x3d\xfe\x7a\xfe\x30\xb8\x60\x17\xb3\x59\x57\x67\x6b\xff\x96\xbe\x10\xfe\xdc\xeb\xcc\xfc\xef\xc1\xa5\x4f\x61\x67\xe0\xdf\x6f\x2e\x3a\x0f\xa7\xac\xd7\x1d\x3f\x3d\xf4\xa9\x7f\xde\x3e\x8e\x97\xfb\xfd\xa8\x15\xdd\xba\x4f\xcf\x8f\x4f\xf4\xf1\xbe\x15\x6c\xb4\x6d\x29\x84\xef\x20\x40\x3f\x8f\xa2\x72\xb0\x34\x95\xde\x66\x73\x24\xc0\xc4\xd6\xb1\xbb\x45\x47\x41\x6e\x8b\xb3\x5d\x31\x13\x9d\x91\x71\xc0\xfc\x1a\x42\x48\x12\x85\xf6\x54\x96\x49\x11\x16\x75\xb1\x02\x36\xd1\x36\xab\xd5\x31\xa7\x28\x54\xe5\xff\xa5\x64\x12\x69\x59\xaf\xb4\xcc\xd1\xf9\x4f\x00\x00\x00\xff\xff\x65\xf9\x3c\x15\x38\x1a\x00\x00")

func go_centrifuge_build_configs_default_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_default_config_yaml,
		"go-centrifuge/build/configs/default_config.yaml",
	)
}

var _go_centrifuge_build_configs_testing_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xc9\x6e\x1c\x37\x10\xbd\xf7\x57\x10\xcc\xc1\x97\x59\xb8\x6f\x37\x43\xf1\x12\x08\x11\xe2\x38\x80\x9c\x63\x91\xac\x96\x1a\xa3\x5e\xc2\x66\x4b\x1e\x1b\xfe\xf7\xa0\x67\x46\xb6\x6f\x51\x6e\x64\x75\xbd\xf7\x58\xd5\xef\x25\x1c\x6a\xe9\xda\xe5\x0e\x6f\xb0\x3e\x8d\xe5\x10\x48\xc5\xb9\x76\xc3\x5d\x83\xf5\x1e\x0b\x2e\x7d\x68\x08\x81\x94\xc6\x65\xa8\xf3\x7a\x26\xa4\x87\x6e\x08\xe4\x74\x24\xe4\x80\xc7\x40\x5e\x7d\xa5\x90\x73\xc1\x79\xa6\x81\x3a\x1f\x19\x38\xa3\x9d\x4c\x4a\x29\x05\xa9\xcd\x96\x47\x65\x24\xb2\x2c\x93\xd6\x80\x5c\x71\x01\x9a\x6e\x68\x2a\xc7\xa9\x8e\x34\x7c\xa5\xa9\x9b\xee\xb1\xd0\x40\x01\xe7\x2d\x17\x6e\x9b\x6a\x59\x1b\x4e\xe5\x8a\x9f\x2b\x0d\x34\x59\xeb\x5b\x27\xad\xcf\xd6\xb2\xec\x45\x6a\x13\xcf\x39\x2b\x70\xad\xe4\x59\x03\x83\x9c\x5c\x2b\x80\x45\x01\x5c\x31\x2e\x2d\xcb\xd2\x48\xd6\x4a\x97\x58\x72\xf0\x9d\x6f\x82\x02\xfd\xbc\xca\x76\x8f\x34\x50\x69\x12\x37\x0e\xad\x8c\xad\x77\xac\x45\xab\x23\xb3\xc2\xb6\xce\x33\xb0\x1c\x32\xfd\xb6\xa1\x87\xdc\xd2\x40\xe7\xd3\x83\xe9\xe9\xfa\x83\x24\x1f\x1e\x70\xa0\x41\x8a\x0d\x1d\x68\x10\x46\x70\xa5\x36\x74\xa2\x81\x6f\x68\xa1\xc1\x6d\xe8\x0c\x0f\xeb\x00\x19\x79\x44\x6e\x50\x26\xef\xb8\x57\x2a\x73\x4c\x20\xa2\x8b\xc2\xa2\x42\x83\x2c\xea\xd8\x46\x25\x23\x32\x69\x0d\xe8\xec\x9c\xf3\x2d\x18\xeb\x41\x38\x2e\xc4\xfa\x90\x1e\xd2\xba\x8a\xc4\x85\x8b\x8e\x6b\xad\x75\x04\x8e\x90\x6d\x02\xf4\xcc\x30\x74\x4e\x09\x68\x13\x38\xa9\x4d\x66\x46\x69\x1d\xb3\x07\x6d\xb5\x88\x60\xda\x94\x98\x17\xd8\xae\x4c\x5d\xa6\x81\x2a\x8d\xcc\x30\x30\xdb\x2c\x00\xb7\x4a\x46\xb7\xf5\x42\xb4\x5b\xa5\x9c\xf0\xca\xfb\x2c\x6d\xa6\x1b\xfa\x88\x65\xee\xc6\x75\xc8\x6f\xaf\x2e\x3f\x7e\x82\x79\x7e\x1a\x4b\x0e\xe4\xd5\x73\xe9\xe2\x81\x40\x5e\x6a\x81\xa6\xe9\x32\x0e\xb5\xab\xc7\xdf\x72\x20\x94\x7d\x7e\xb1\x77\x9a\x66\xb5\xee\xd5\xfd\x6a\xc5\x1f\x06\x3d\xfb\xb3\x3b\x73\x65\x25\xb5\x97\xc9\x72\xdd\xe6\x2c\x79\x32\x9c\x2b\x0e\x31\x33\x05\xde\xb7\xd9\x38\x21\x92\xd3\xda\x39\xad\x52\xca\x28\x3d\x68\xe3\x14\x5a\xd0\x26\x83\xb0\x99\x9e\xc8\x66\x4c\x05\x6b\x20\x74\xbf\x7f\xfd\xd0\x25\x3c\x57\xbf\x4f\x4a\xf5\xbb\xf2\xf4\x08\x6f\xde\xea\x2f\x9f\xa2\x30\x6f\xbf\xf8\x92\x3e\x4c\xbf\xde\x7e\xd4\xf6\xaa\xbe\xf9\xf3\xfd\x74\x83\xf7\x9f\xae\xfe\x48\x37\xe3\xfb\x77\xd7\x4b\xfd\xf0\x37\x6d\x9a\x5f\xc8\xeb\x4b\x9e\xd6\xf4\x90\xb9\x8e\x05\xee\xb0\xf9\x39\x64\x07\x3c\xae\x65\x0c\x64\x5f\xfb\x69\xff\xfc\xa9\x69\xfe\x59\x70\xc1\xb5\x63\x58\xfa\xdb\xb1\x1c\xb0\xcc\x81\x88\x86\x90\xa7\xd3\xe5\x16\xba\xfa\x57\xd7\xe3\xef\x1f\x03\xe1\x4d\xb3\xd2\xac\xcd\x93\x98\xce\xab\x99\x96\xf8\xd0\xa5\xeb\x35\xb3\xbb\xdd\x7e\xb7\xdb\xc7\xa5\x7b\xc8\xfb\x82\xf3\xb8\x94\x84\xf3\x7e\x12\xd3\x35\x1e\x77\xd3\x12\x77\x13\xf6\x67\x4c\xe9\x1e\xa1\xe2\x7f\x83\x0e\x2b\xf0\x04\x9a\xbb\xbb\xa1\x1b\xee\x5e\xa8\x79\xe9\xfe\xff\xba\x3f\x01\x9f\xb5\x1b\x18\xd2\xfd\x58\x2e\xe2\x53\xc1\x34\xf6\x7d\x57\x03\xa9\x65\xc1\xe6\xdf\x00\x00\x00\xff\xff\xdc\x3c\xc5\xc4\xef\x04\x00\x00")

func go_centrifuge_build_configs_testing_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_testing_config_yaml,
		"go-centrifuge/build/configs/testing_config.yaml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"go-centrifuge/build/configs/default_config.yaml": go_centrifuge_build_configs_default_config_yaml,
	"go-centrifuge/build/configs/testing_config.yaml": go_centrifuge_build_configs_testing_config_yaml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"go-centrifuge": &_bintree_t{nil, map[string]*_bintree_t{
		"build": &_bintree_t{nil, map[string]*_bintree_t{
			"configs": &_bintree_t{nil, map[string]*_bintree_t{
				"default_config.yaml": &_bintree_t{go_centrifuge_build_configs_default_config_yaml, map[string]*_bintree_t{
				}},
				"testing_config.yaml": &_bintree_t{go_centrifuge_build_configs_testing_config_yaml, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
