package resources

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _go_centrifuge_build_configs_default_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x4b\x6f\xe3\x38\x12\xbe\xeb\x57\x14\x9c\x4b\xf7\x62\xda\xb6\xe4\xb7\x81\x3d\x38\x76\xe2\xce\xcb\xeb\xc4\xce\xf3\xb2\xa0\xa8\x92\xc4\x58\x22\x15\x92\xf2\xeb\xd7\x2f\x48\x49\x4e\x32\x99\xde\xde\xee\x99\x59\x60\x80\xe9\x4b\x0c\x92\xf5\x55\xb1\xea\xab\x87\xd8\x47\x30\xc1\x90\xe4\x89\x86\x00\xd7\x98\x88\x2c\x45\xae\x41\xa3\xd2\x1c\x35\x90\x88\x30\xae\x34\xac\xc4\x9a\x70\x87\x22\xd7\x92\x85\x79\x84\x33\xd4\x1b\x21\x57\x43\x08\x13\xc6\xb5\x63\x41\x18\x47\xd0\x31\x42\x50\xe2\xf1\xe2\x8c\x02\x1d\x13\x0d\xe3\x83\x2c\xa4\x84\x71\x6d\x70\x9d\xea\xc8\xd0\x01\x38\x82\x4b\x41\x49\x62\x55\x33\x1e\x01\x15\x5c\x4b\x42\x35\x90\x20\x90\xa8\x14\x2a\xe0\x88\x01\x68\x01\x3e\x82\x42\x0d\x1b\xa6\x63\x40\xbe\x86\x35\x91\x8c\xf8\x09\xaa\xba\x03\x95\xbc\x81\x04\x60\xc1\x10\x5a\xad\x96\xfd\x8d\x3a\x46\x89\x79\x5a\xda\x7e\x16\x0c\xa1\xdf\xea\x17\x7b\xbe\x10\x5a\x69\x49\xb2\x39\xa2\x54\x85\xec\x17\xa8\x35\x58\xd6\x6e\xb8\x5e\xaf\xde\xac\x37\xeb\x6e\x43\xd3\xac\xd1\xea\x7b\x4d\xaf\xc1\xb2\x50\x35\xae\xd3\xe5\xf5\xd6\xdf\xac\xf2\xa7\xc7\xc7\x49\x98\xef\x97\xfe\xf6\x64\x74\x83\xcb\xd9\xf8\x52\xec\x77\xbb\x4e\xa7\xbf\xbe\xe6\xd1\xdd\x7a\x7e\xf5\x7c\xf9\xb8\xaa\x7d\x07\xb4\x55\x81\xde\x85\xdd\x93\x59\x37\x5d\xbd\xdc\xe3\xf3\xfd\xc5\xbd\xf7\x32\xcf\xdd\xee\x43\x16\x4c\x5b\xab\x73\xe1\x2e\x5b\x69\x4c\xe2\xf9\x71\x67\x81\x1d\xee\x16\xa0\x95\xab\x46\x95\xa7\x8a\x0b\x98\xeb\x23\xd7\x4c\xef\x4e\x09\xd5\x42\xee\x86\x50\xab\x39\xd6\xd5\x57\x84\xf1\x0f\x01\xaf\x22\x06\x9f\x2e\x4c\xb8\x3f\x3b\x50\x84\xb7\x40\x3b\x82\x59\x9e\xa2\x64\x14\xce\x26\x20\x42\x1b\xea\x37\x41\x2d\x65\x0f\x5e\x77\xbd\x52\xea\xb8\x72\x2d\x24\x4c\x69\x23\xc9\x45\x80\x1f\x59\x91\x49\xb1\x66\x76\x43\x58\x6c\xab\xba\x22\xe2\x77\x83\xd4\xea\xd4\xbd\xb6\x57\xf7\x5a\xcd\xba\xeb\x76\x7f\x1d\x29\xd7\x9b\xb4\x2e\x84\xb8\x5f\xf8\x5b\xff\x62\xec\x3f\xc5\x83\xf3\x3b\xad\xae\x77\x77\xd3\x60\x39\x97\xa4\x7d\x93\x2d\x46\x6d\xed\xaf\x55\x97\x70\xd7\x7d\xde\x4c\x47\xde\xbe\xf6\x01\xbf\xd5\xae\xf7\xbc\xba\xeb\xf5\xbe\x05\x7f\x9d\x7a\x74\x91\xca\x13\x46\x16\x57\x77\xed\xe8\x76\xdd\xbb\x9f\xc6\x59\x74\xb3\x11\xfd\x8d\x38\x5d\xa8\xaf\xf1\xd3\xd4\x9f\xb2\x16\x19\xf5\xb7\xb5\xd2\x3d\x27\x25\x2b\x0f\xce\x3f\x9b\xc0\x17\xb0\x01\xf8\x16\x6b\xdb\x95\x6b\x2f\x89\x0d\x5b\x80\x59\x22\x76\x18\xc0\x22\x25\x52\xc3\xb8\x64\x83\x82\x50\x48\xeb\xca\x88\xad\x91\xbf\x73\xe5\x0f\x30\xa6\xb9\x75\x5b\x5d\xef\x84\x1e\x87\xfd\x6e\x6f\xe0\xb5\x5b\x27\x5e\x3b\x1c\x35\x4f\xc6\x6d\xaf\x13\x78\xe8\x36\x47\xcd\xbe\xe7\xb5\x68\x6f\xf2\x96\x5b\x4a\x93\xc8\x64\xf1\x47\x4a\x91\xd4\x47\xf9\x73\x94\x72\x7f\x27\xa5\xac\xea\xef\x52\xea\xcf\x27\xd5\xdf\xb4\xfa\xe3\x69\x45\x89\x26\xc9\x4e\xfd\x64\xb1\xfa\xbd\xcc\x1a\x97\xda\xff\x26\xd7\x5f\x97\x5c\x66\xde\x79\x25\x46\x5a\xac\xfc\x1c\x9d\x9a\xff\x4b\xbf\x72\x07\xfd\xba\xeb\x79\x75\xd7\xfd\x66\x70\x46\x51\xeb\x84\x8e\xb4\x7c\xbc\x1b\x6f\x37\xfb\xee\xaa\xab\x96\x03\xf6\xb4\xb8\xd9\xeb\xfd\x60\xd2\xdb\xdd\xee\xb3\xe3\xf9\xcd\xc9\xe9\x5e\xde\x8a\xbb\x8f\xfd\xca\xb0\xcb\x73\xeb\xae\xfb\x61\x72\xa9\xf0\x2f\xa6\x1b\xb6\x7d\x40\x9e\x3f\x8c\xee\x5e\x56\xe7\x17\x29\xff\xba\x18\x9d\x4f\x9e\xf7\x61\x0f\xa7\x57\xa2\xab\xa5\x60\xd1\xd3\x36\xed\x8d\x3a\x37\xff\x3d\xf8\xa5\xbb\xbe\x15\x7e\xf7\xff\x1b\xfd\xd1\x69\xbb\xd3\xa5\x6e\xb7\xd5\xef\x92\x6e\x3b\x0c\xda\xa7\x6d\xbf\x3b\x20\xa1\xdb\x22\xfd\xee\x24\x6c\x1e\x77\xba\xde\x88\x34\x9b\x65\xf4\xdf\x84\xf2\x23\x11\x5e\x87\xde\x3f\x9a\x0b\x7f\x3e\x1b\xfe\xe6\xc3\x0f\xf3\xe1\x08\x26\x44\x13\x58\x68\x21\x49\x84\x8e\x2a\xfe\x16\x1f\x28\x73\xa2\x63\x6b\x52\x62\x26\xe7\xc9\x31\x84\x2c\x41\x07\x20\x23\x3a\x1e\x42\x43\xa7\x59\xe3\x95\x2d\xff\x0e\x88\x26\x75\x7b\x32\xf0\x0d\xee\x58\xf0\x90\x45\xb9\x24\x9a\x09\x7e\x50\x40\xed\xea\xe2\xe7\xd5\x14\x00\x1f\xb4\x8d\x28\x15\x39\xd7\x0a\x56\xb8\x83\xf2\x16\x0e\x29\x17\x8d\x9e\x15\xee\xcc\x32\x96\x88\xd5\x96\x91\x3d\xe3\x1a\x65\x48\x28\xc2\xc6\x44\xce\x46\x60\x34\x3f\x03\xc2\x03\x98\x7b\x73\x58\xa0\x5c\xa3\xb4\x2d\x12\xb9\xe9\x81\x8e\xe9\x92\x5f\x85\xd2\x9c\xa4\x68\x66\xff\xf2\xe3\xc6\x39\x82\xb9\x90\xba\x84\x31\x10\xbf\x2d\x6a\x0e\x0d\xa1\xdf\xec\x7b\x46\xbd\x49\x91\x2f\x5a\x7c\xc9\x10\x25\xd0\xb7\x5e\x53\x4e\xe6\x65\x85\x93\x16\x19\x52\x16\xee\xe0\x64\xab\x51\x72\x92\xc0\xd9\xfc\x8d\xb5\x06\x14\x28\xe1\xe6\x53\x51\x22\xa1\x31\x06\x40\x34\xb0\x10\x7c\x8c\x19\x0f\x60\x36\x5a\x1a\x18\x2c\xa5\xcf\xe6\x43\xd8\xd4\xb7\xf5\x5d\x7d\x5f\x84\xc0\x58\x9d\x2b\x0c\x0e\x0c\x34\xf7\x4e\xc8\x0e\xa5\x09\x84\x35\xd7\xe6\x8f\x3d\xbd\x64\x29\x8a\xdc\x5e\x93\x83\xc8\x90\x97\xdf\xaf\x1c\xa9\xb5\xda\x4c\x09\xe6\x32\xca\x81\x6a\xb9\x14\x19\x42\xad\xd5\x54\x35\x8b\x92\x32\xce\xd2\x3c\x85\x00\x13\xb2\xb3\x7a\x71\x8d\x72\x07\x99\x97\x81\x44\x95\x09\xae\xd0\x20\x91\xb5\x60\x01\x68\x96\x1a\x2d\x44\x6b\x42\x57\xca\x02\x90\xe0\x39\x57\x1a\x7c\x62\xec\x16\x1c\x62\xa1\xb4\x91\x14\xb9\xa4\xa8\xe0\xd3\x62\x31\xf9\x05\xc6\xf3\xdb\x5f\x80\x0a\x89\x0a\xea\xf5\xfa\xe7\xf2\xc3\x5b\xac\x80\x71\x48\x44\x64\x53\x6e\x08\x35\x63\x9f\xb1\x55\xe5\x29\x06\xe0\xef\xcc\xb5\x8a\x18\xd4\x8c\x17\xb7\xff\xfc\xb4\x26\x49\x8e\x37\x48\x02\xf8\x07\x78\x9f\x81\x29\x48\x50\xd9\x49\x89\x83\xdd\x03\x1f\x13\xb1\xf9\xc5\x78\x8f\x03\x8d\x09\x8f\xf0\x70\x8f\x89\xbd\xa3\x16\xb0\x75\xe0\xfd\xe2\x10\x6a\x9d\x66\x33\x55\x36\x15\xaf\x73\xcc\xf1\x57\x14\xb0\x9e\x21\x6a\xc7\x69\x2c\x05\x17\xb9\x32\xc3\x18\x45\xa5\x18\x8f\x9c\x17\x23\x50\x10\xa4\x78\x91\x50\x05\x1d\x72\x3b\xf9\x8b\x10\x4c\x01\x42\xa9\x1a\xe5\xd5\x64\x39\xda\x6d\x58\x92\x18\xae\x90\x24\x11\x94\xe8\x82\x2d\x4a\x13\xa9\xf3\xcc\x01\x23\x7f\x5f\x08\x9a\x82\xde\xb4\xf8\xa7\x12\x51\x41\x9e\x19\x8f\x02\xdd\xd1\x04\x55\x41\x80\x42\x85\x71\xc8\x86\x30\xfb\x94\x51\xc6\xd2\x64\x17\x94\xdb\xf7\x84\x59\x0e\x5c\x2d\x8a\x62\x78\x04\xa3\xd4\xe4\x9f\xed\x28\xc6\xf7\x04\x34\x51\x2b\x83\xb2\x26\x09\x0b\x20\x94\x22\xb5\x77\xa1\x12\xad\x23\x1c\x28\x76\x4e\x6d\xbc\x5c\x2f\xae\x39\xb6\xca\x20\xd7\xe3\xd8\xce\xca\x36\x43\x18\x7d\xef\x3f\xfb\x88\x63\x0f\x18\x37\x99\x3c\xb9\xbd\xb9\x1c\xc2\x46\x0d\x1b\xaf\x8f\x12\xc3\xc1\xa0\xdd\xb5\x56\xcd\x4c\x22\x69\x49\xb8\x22\x96\xcb\x90\x09\x91\x40\x4a\xb6\x20\x51\x4b\x56\x4c\xc0\x0a\x79\x60\x0c\x7e\x73\x4c\xac\x6d\xa6\xa4\x64\x7b\x53\x9c\x1b\x82\x57\x3a\xee\xb7\x21\x99\xa9\x39\x6b\x92\x58\xdc\x5d\xe1\x49\x62\x4c\xa7\xb9\x94\xf6\x85\xe2\x8d\x44\x4c\x14\xf8\x88\x1c\x02\xd4\x48\x35\x06\x0e\x1c\x00\x8c\x3e\xc3\x22\xaf\x4c\xab\xea\x79\x2b\x61\x21\x96\xc4\xd4\xc2\xe4\x76\xa1\x83\x8a\x34\x65\xda\x86\x89\x70\x20\x9c\xc6\x86\x5e\xe5\xb3\x97\xf5\x37\x72\x4d\xad\x43\xbf\x80\x0b\x3b\x24\xe6\x5e\xc5\xb9\x4b\x16\xa2\xca\x08\x1f\x42\xad\xdf\xeb\x36\x63\xcb\xd9\x43\x3f\xfc\x86\xff\xab\x6e\x58\x96\x31\x4c\xd0\x34\xba\x4d\xcc\x68\x7c\xe8\x94\x50\x56\xe3\xca\xd2\x72\xcc\x10\x86\xcf\xe5\xa7\x47\x60\x12\xd6\xda\x97\x2b\x2d\xd2\x52\x49\xd5\x2a\xca\x37\xb8\xb2\x09\xcc\x6c\x55\xae\x99\x9e\x5c\x3b\xbc\xb4\x15\x61\x2a\x80\x0f\x7a\x69\xc2\x8c\xaf\x6d\xf9\xfc\xb4\x31\xf9\xfa\x92\x33\x89\xb0\x51\x20\x24\xb0\x8c\x96\xcf\x6f\xc4\x4f\xac\x1b\x29\xd1\xc6\x6c\xcb\xed\xcf\x6f\xf9\x14\x6b\x9d\x0d\x1b\x0d\x93\x4d\x89\xa9\x43\xc3\x41\xa7\xdd\x29\xca\x1c\xd9\xda\x32\x67\x52\x6d\x83\x01\x44\xc4\xdc\x89\x51\x8b\x97\x95\x95\xef\x3d\x99\x18\x87\x0d\x32\x2b\xed\x35\x61\xba\x41\x06\x5c\x6c\x0a\x7a\x4d\x89\x9a\x1b\x69\xcb\xaf\xea\x9f\x3d\x3a\x25\x0a\x12\x96\xb2\x72\x8c\x08\x58\x18\xa2\x65\xd2\x21\x42\x87\x9a\x66\xf2\x32\x22\xea\xd2\x9e\xae\x5e\x0e\xc7\x26\xd1\xd0\x26\x7c\x89\x69\x56\x47\x41\x70\x81\xbb\x21\xb4\xde\x2e\xde\xe0\x5a\xac\xd0\xae\xf7\x3b\xd5\x72\xc1\x91\xb1\xe5\xd7\xc7\xf5\xb9\xc4\x6a\xcb\x7d\x85\xe2\xa1\xbe\x62\x5c\x0f\x61\xf0\x6e\x6d\x69\x9c\x11\xa2\x3c\x95\x22\x1d\x82\xdb\x39\xec\x11\xa5\x50\x2f\x8a\x36\xde\x3d\xac\x66\xb9\x8a\x97\xe2\x5f\x92\xd0\x04\x2b\x28\x38\x3a\x14\x39\x89\xa9\x58\x9b\x12\xa7\x40\x09\xc1\xcd\x5f\x5f\xb2\x20\x42\x53\x6d\x4c\x1a\x45\x92\x14\x39\xf5\xda\xda\xb4\xb0\xd5\xac\x08\x0e\x7f\x25\xcc\xdb\x30\x95\xd4\x08\x82\xe2\x95\x96\x80\x9f\x08\xba\xb2\x53\x43\xc1\x10\xd0\x92\x45\x11\x4a\x8b\x6d\x06\x38\xdc\xea\xaa\x10\x16\xcd\xb0\xdb\xac\xba\xe1\x6f\x29\x96\xa6\xdb\x08\x9e\xbc\xe9\x46\xea\x90\xab\x95\x49\xaf\xd0\xa6\x39\xbd\x87\x77\x3b\x25\xfa\x5f\xbf\xac\x2d\x63\xa6\x40\x61\x51\xb9\x94\x99\xaa\x94\x09\x64\x9a\x27\x9a\x65\x09\x33\xdd\xce\x0c\x5a\xef\xb2\xfb\x35\xd5\x50\x69\x96\x56\x6d\x24\x22\xea\xea\x20\x36\x04\xb7\xde\x74\x1c\xf3\x59\x50\x35\x88\x22\x21\xb2\x24\x8f\x18\x57\x73\x3b\x84\xd6\x6a\xdf\xf9\xaa\x09\xb8\x22\x41\x20\x1b\x87\x13\xf5\x84\xf9\x99\x97\xd5\x99\x68\x64\x5e\xd6\xb8\x4e\x67\x5c\x88\x49\xde\xf3\xc3\xe7\xf9\xa9\x58\x3e\x3d\x6e\xaf\x66\x97\xf7\xb7\xd7\xe7\x3b\x79\xb7\xd1\xfe\x53\xd4\x89\x8e\xaf\x9e\x97\xb8\x9f\x8e\xce\x67\xb5\x1f\x42\xbe\x1e\xdf\x7a\x27\xf4\xea\x65\xf4\x72\x3d\xbf\xf1\xd8\xc0\x1f\xc7\x13\x3d\x9d\x9d\xd3\x78\xe9\xbf\x74\x96\xfe\xc3\xf9\xb9\xdb\xcd\xdd\x41\x7e\xb9\x24\x3f\x86\xec\x5f\x7e\x1d\xf1\x2b\x71\x3e\xbf\x5f\x8c\x6f\x3a\x4f\xb1\xde\x76\x8f\xbf\x9e\x3f\x0c\x2e\xd8\xc5\x6c\xd6\xd5\xd9\xda\xbf\xa5\x2f\x84\x3f\xf7\x3a\x33\xff\xc7\x90\xe9\x53\xd8\x19\xf8\xf7\x9b\x8b\xce\xc3\x29\xeb\x75\xc7\x4f\x0f\x7d\xea\x9f\xb7\x8f\xe3\xe5\x7e\x3f\x6a\x45\xb7\xee\xd3\xf3\xe3\x13\x7d\xbc\x6f\x05\x1b\x6d\xdb\x0c\xe1\x3b\x08\xd0\xcf\xa3\xa8\x1c\x36\x4d\xf5\xb7\x19\x1e\x09\x30\xf1\x76\xec\x6e\xd1\x65\x90\xdb\x82\x6d\x57\xcc\x94\x67\x64\x1c\x30\xbf\x86\x10\x92\x44\xa1\x3d\x95\x65\x52\x84\x45\xad\xac\x80\xcd\xb0\x6b\x56\xab\x63\x4e\x51\xbc\xca\xff\x5f\xc9\x24\xd2\xb2\x86\x69\x99\xa3\xf3\x9f\x00\x00\x00\xff\xff\x14\x3c\xe5\x53\x4c\x1a\x00\x00")

func go_centrifuge_build_configs_default_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_default_config_yaml,
		"go-centrifuge/build/configs/default_config.yaml",
	)
}

var _go_centrifuge_build_configs_testing_config_yaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x97\xa2\x48\x16\xdd\xf3\x2b\x38\x31\x8b\x9a\x39\x27\x53\x89\x80\x80\x80\x5d\xa5\xa6\x26\x56\xa9\x9d\xa9\x09\xc2\x2e\xbe\xd0\x00\x02\x19\x3e\x34\xb5\x4f\xff\xf7\x39\x68\x56\x75\xed\xa6\x7a\x47\xbc\x8f\x7b\xef\x7b\xdc\xc7\x65\xd5\x35\x2a\xeb\xf7\x72\x25\xbb\xf3\xb1\x29\x02\xb3\x93\x6d\xa7\xaa\xbd\x21\xbb\x83\x6c\x64\xaf\x03\xc3\x34\x29\xe7\xc7\xbe\xea\xda\xe1\xdb\x34\x35\x55\x55\x60\xde\x3e\x4d\xb3\x90\x97\xc0\xfc\xf2\x27\xa0\x42\x34\xb2\x6d\x41\x00\x88\xcf\x2c\x4a\x5c\x4c\x6c\xee\x38\x8e\x43\x79\x26\x3c\xc8\x1c\xd7\x96\x96\xb0\x39\xc6\x54\x42\x07\x22\x8a\xc1\x03\xe0\xcd\xa5\xee\x8e\x20\xf8\x13\x70\x55\x1f\x64\x03\x02\x40\x65\xfb\x08\x11\x79\xe4\x5d\x33\x14\xdc\xc2\x9d\xfc\xe8\x40\x00\xb8\xe7\xf9\x19\xb1\x3d\x5f\x78\x9e\x25\x7c\xc4\x33\x0e\x85\x10\x0e\x25\x99\x0d\x05\xa6\x16\x15\x9c\x64\x88\x5a\x0c\x51\xe8\x58\xd0\xf6\x2c\x61\xbb\xb6\x95\xd9\x84\x5b\x9c\xd0\x9f\x78\x35\x6d\xa8\x6e\x07\x5a\x75\x02\x01\xb0\x5d\x0e\x5d\x22\x3d\x9b\x65\x3e\xb1\x32\xe9\x61\x66\x79\xc8\xcb\x88\x6f\x51\x0f\x52\x01\xfe\x7a\x00\x85\xc8\x40\x00\xda\x9b\x60\x70\x7b\xfe\x0d\x22\x8a\x52\x56\x20\xb0\xd1\x03\xa8\x40\x80\x5c\x04\x1d\xe7\x01\xd4\x20\x80\x0f\xa0\x01\x01\x79\x00\x2d\x2d\x87\x01\x84\x84\x4c\x42\x57\xda\xdc\x27\xd0\x77\x1c\x01\x25\xa7\x88\x11\x86\x3c\xe9\x48\x57\x5a\x0c\xb3\x8c\x39\x36\x93\x96\xed\xb9\x14\x0b\x42\x88\x9f\x51\xd7\xf3\x29\x22\x10\xa1\x41\x88\xa6\x7c\x58\x05\x87\x88\x30\x02\x31\xc6\x98\x51\x28\xa9\xf0\x38\x95\xbe\xe5\x5a\x92\x10\x07\xd1\x8c\x53\x62\x63\x57\x58\xae\x83\x31\x13\x3e\xc5\x1e\x46\x8c\xba\x19\xe7\x96\x8f\x64\x36\x20\x29\x01\x02\xe0\x60\x69\xb9\x16\x75\x1f\x05\xa2\xf2\xd1\xb1\x19\x79\xf4\x11\xca\x1e\x1d\x87\x20\xdf\xf1\x7d\x61\x7b\x02\x3c\x80\x93\x6c\x5a\x75\x1c\x86\xfc\xeb\xcb\xe7\x8f\xaf\x69\xdb\x9e\x8f\x8d\x08\xcc\x2f\x3f\x42\x9f\x1e\x08\xcc\xdf\xb5\x80\x61\x28\x21\xab\x4e\x75\x97\x50\x04\x26\xb0\x3e\x7e\xdb\x3b\x86\x31\x58\x77\x72\x18\xac\xf8\xb7\x41\xef\xfe\x54\x77\x2c\xe1\xd8\xd8\xb7\xb9\x07\x71\x26\x84\x0d\xb9\x0b\xa1\x03\x29\x13\x96\x43\x7d\x3f\x13\x2e\x41\x88\x13\x8c\x09\xc1\x0e\xe7\x42\xda\x3e\xc5\x2e\x71\xa4\x47\xb1\x2b\x28\xf2\x04\xb8\x81\xb5\x92\x37\xb2\x0b\x4c\x30\x1e\x7f\x2d\x15\x97\xf7\xe8\xcf\x49\x01\x9e\x37\xe7\x13\x7d\x9e\xe1\xeb\x8e\x21\x77\x76\xf5\x1b\xfe\x5a\x4f\xe3\x0d\xf6\x26\xdd\xf3\xdb\x4b\xbd\x92\x87\xdd\xe4\x0f\xbe\x3a\xbe\xcc\xbf\xf5\xdd\x6b\x02\x0c\xe3\x5f\xe6\xd7\xcf\x7b\x1a\xae\xc7\x6c\xbb\x63\x43\xf7\xd2\xf8\xf5\xc8\x0a\x79\x19\xc2\x32\x30\xc7\x9d\xae\xc7\x3f\x52\x86\xf1\xdf\x5e\xf6\x72\xa8\xa8\x7a\x1d\x1f\x9b\x42\x36\x6d\x60\x22\xc3\x34\xcf\xb7\x47\x4c\x55\xb7\x55\x5a\x2e\x37\x81\x09\x0d\x63\x80\x19\x8a\x6b\x54\xdf\x57\x53\xf7\xac\x54\xfc\xdb\x70\xb3\xa3\xd1\x78\x34\x1a\xb3\x5e\x95\x62\xdc\xc8\xf6\xd8\x37\x5c\xb6\xe3\x1a\xd5\xdf\xe4\x65\x54\xf7\x6c\x54\x4b\x7d\xef\x69\xd4\x89\x76\xf2\xff\x37\x15\x43\xe3\xad\xa9\x55\xfb\x4a\x55\xfb\xdf\xe4\xfc\xac\xfe\xe7\xbc\xbf\x34\xfe\xe0\x36\x68\xc5\x0f\xc7\xe6\x93\xbc\x6e\x24\x3f\x6a\xad\xba\xc0\xec\x9a\x5e\x0e\xab\xdf\xae\xa7\xeb\x7f\x73\x41\xb5\xa2\xd5\x7f\x02\x73\xaa\x5a\xde\xb7\xad\x19\xfe\x31\xdb\x98\xb5\xaa\x06\x3c\x93\x37\xf2\x66\x4b\x5a\xb6\x86\xaa\xb3\xfb\x0a\xef\xb9\x8d\x6c\x4e\x8a\xcb\xfb\x64\x15\xd5\x32\x30\x41\xad\x2a\xda\xd1\xbb\x31\xfa\xa6\x0c\x4c\x70\xe8\xba\xba\x0d\xc6\x63\x5a\xab\xd1\x3d\x3b\xe2\xe5\xb1\xff\xb4\x14\xed\xbb\x43\x60\x02\x79\x59\x1c\xd8\x9c\xab\xb5\x5a\x84\xef\xd7\x10\xae\x54\xd8\x86\xd5\x1b\xe6\x93\xd0\x0d\x8b\x7a\x17\x4d\x16\xfe\x48\x5e\x16\x90\xa3\xe8\xb2\x89\xb1\x66\xf6\xa2\x4b\x76\x6f\x35\x43\x8e\x5a\x57\xad\xa2\xf1\xab\x5a\xab\xd0\x4e\xf2\xd0\x4e\x75\x5a\xa6\x0a\x1e\x56\xd7\x02\x7d\xdf\xbe\xe9\xf5\xb6\xe8\xd6\xf1\xb3\xb5\x9e\x58\x38\x9d\x26\x97\x64\xbb\x77\x92\x6b\x62\xaf\xb6\xaf\xea\xfb\x64\x51\xb2\x78\x56\xb3\x81\x48\xaf\x4e\x1c\xc1\x9a\x15\x4f\x79\x1a\x63\x8b\xeb\x52\x8b\x58\x94\xdf\x75\x79\x0a\xd5\x59\xa5\x31\x3c\xd0\xf8\x23\x13\x3a\xba\xd0\x38\xad\xd3\x81\xb3\x7a\xbb\x88\xf8\xbd\x0d\xab\xa7\x9a\x95\xfe\x99\xa1\x8f\x3a\xb1\x8b\x9b\x26\xae\xa3\x8a\xc6\x7e\xcf\x2f\xa1\x1b\xdb\x3f\x34\x2e\xe6\xef\xc5\xf3\xc7\x0d\x6f\x1e\x5d\xe9\x6e\x51\xa6\xb3\x45\xc9\xe7\x1f\x75\x82\x66\xd6\x50\xff\x8a\x7c\xc8\xaa\x57\xb5\xce\x67\xfe\x6e\x73\x56\x03\x1f\x47\xe5\x89\xa9\xd0\x5d\xee\xac\x36\xd4\x50\x27\x91\x5f\x32\x3d\x53\x6c\x1e\x15\x61\x5e\xeb\x24\xfe\xb8\xa6\xb7\xdc\x0c\x8a\xf9\xa1\x64\xd5\xdb\x4f\xbc\xe8\xa5\x3c\xa7\x9b\xd0\x0d\xab\x55\xce\xec\xa7\x32\x7d\xee\x4a\xb9\x19\x16\xfc\xcb\xfb\xfd\x16\x73\xc3\xfc\x19\xaf\xa7\x69\x9e\x6e\x67\x3a\xd5\x33\x9d\x4e\xa3\x62\x99\x8b\x43\x92\x87\x68\xd0\xcc\xd1\xea\xc4\xe7\x51\xb1\x41\x11\x7e\x47\x51\xce\x75\x64\x85\xf9\x51\xa5\x71\xaa\x97\xf9\x1e\x2f\xf3\xb7\x22\xc9\x67\xe5\xea\x1a\x5e\xd3\x6d\x08\x97\xf1\x42\x2d\xf3\xa7\x62\xa5\x13\xbc\xda\xf2\xf3\x3a\x5e\x5e\x56\x3a\xca\x57\xd3\x55\x91\x5c\xcb\x43\xb2\x8d\xf2\xe5\x94\xc3\x24\x2f\xac\x44\xbf\xdb\xcb\x38\x2d\xd6\xdb\xb2\x5c\xe6\xc9\x25\x1d\x34\xea\xf2\x20\x26\xa1\xbb\xdc\x26\x70\x79\x7d\x3d\xaf\xb7\x5f\xe1\xfa\xc5\x1a\xcd\xb6\x4f\xd8\x4b\x49\x83\x3d\xb1\x60\x62\xa6\x51\xf8\x52\xb2\x67\x42\x16\xbb\xe6\x48\xdd\xa7\x63\xf9\x1e\xed\x35\x62\xb1\x73\xe0\xe0\x7f\x01\x00\x00\xff\xff\x6b\x30\x67\x65\xd9\x07\x00\x00")

func go_centrifuge_build_configs_testing_config_yaml() ([]byte, error) {
	return bindata_read(
		_go_centrifuge_build_configs_testing_config_yaml,
		"go-centrifuge/build/configs/testing_config.yaml",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"go-centrifuge/build/configs/default_config.yaml": go_centrifuge_build_configs_default_config_yaml,
	"go-centrifuge/build/configs/testing_config.yaml": go_centrifuge_build_configs_testing_config_yaml,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"go-centrifuge": &_bintree_t{nil, map[string]*_bintree_t{
		"build": &_bintree_t{nil, map[string]*_bintree_t{
			"configs": &_bintree_t{nil, map[string]*_bintree_t{
				"default_config.yaml": &_bintree_t{go_centrifuge_build_configs_default_config_yaml, map[string]*_bintree_t{
				}},
				"testing_config.yaml": &_bintree_t{go_centrifuge_build_configs_testing_config_yaml, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
