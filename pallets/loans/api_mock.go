// Code generated by mockery v2.13.0-beta.1. DO NOT EDIT.

package loans

import (
	types "github.com/centrifuge/go-substrate-rpc-client/v4/types"
	mock "github.com/stretchr/testify/mock"
)

// APIMock is an autogenerated mock type for the API type
type APIMock struct {
	mock.Mock
}

// GetCreatedLoan provides a mock function with given fields: poolID, loanID
func (_m *APIMock) GetCreatedLoan(poolID types.U64, loanID types.U64) (*CreatedLoanStorageEntry, error) {
	ret := _m.Called(poolID, loanID)

	var r0 *CreatedLoanStorageEntry
	if rf, ok := ret.Get(0).(func(types.U64, types.U64) *CreatedLoanStorageEntry); ok {
		r0 = rf(poolID, loanID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*CreatedLoanStorageEntry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(types.U64, types.U64) error); ok {
		r1 = rf(poolID, loanID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewAPIMockT interface {
	mock.TestingT
	Cleanup(func())
}

// NewAPIMock creates a new instance of APIMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAPIMock(t NewAPIMockT) *APIMock {
	mock := &APIMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
