// Code generated by mockery v2.13.0-beta.1. DO NOT EDIT.

package access

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// ValidationWrapperMock is an autogenerated mock type for the ValidationWrapper type
type ValidationWrapperMock struct {
	mock.Mock
}

// Matches provides a mock function with given fields: path
func (_m *ValidationWrapperMock) Matches(path string) bool {
	ret := _m.Called(path)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Validate provides a mock function with given fields: r
func (_m *ValidationWrapperMock) Validate(r *http.Request) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type NewValidationWrapperMockT interface {
	mock.TestingT
	Cleanup(func())
}

// NewValidationWrapperMock creates a new instance of ValidationWrapperMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValidationWrapperMock(t NewValidationWrapperMockT) *ValidationWrapperMock {
	mock := &ValidationWrapperMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
