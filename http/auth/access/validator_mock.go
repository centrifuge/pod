// Code generated by mockery v2.13.0-beta.1. DO NOT EDIT.

package access

import (
	http "net/http"

	token "github.com/centrifuge/pod/http/auth/token"
	mock "github.com/stretchr/testify/mock"

	types "github.com/centrifuge/go-substrate-rpc-client/v4/types"
)

// ValidatorMock is an autogenerated mock type for the Validator type
type ValidatorMock struct {
	mock.Mock
}

// Validate provides a mock function with given fields: req, _a1
func (_m *ValidatorMock) Validate(req *http.Request, _a1 *token.JW3Token) (*types.AccountID, error) {
	ret := _m.Called(req, _a1)

	var r0 *types.AccountID
	if rf, ok := ret.Get(0).(func(*http.Request, *token.JW3Token) *types.AccountID); ok {
		r0 = rf(req, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.AccountID)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*http.Request, *token.JW3Token) error); ok {
		r1 = rf(req, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewValidatorMockT interface {
	mock.TestingT
	Cleanup(func())
}

// NewValidatorMock creates a new instance of ValidatorMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValidatorMock(t NewValidatorMockT) *ValidatorMock {
	mock := &ValidatorMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
