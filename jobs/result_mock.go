// Code generated by mockery v2.12.0. DO NOT EDIT.

package jobs

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// ResultMock is an autogenerated mock type for the Result type
type ResultMock struct {
	mock.Mock
}

// Await provides a mock function with given fields: ctx
func (_m *ResultMock) Await(ctx context.Context) (interface{}, error) {
	ret := _m.Called(ctx)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context) interface{}); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewResultMock creates a new instance of ResultMock. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewResultMock(t testing.TB) *ResultMock {
	mock := &ResultMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
